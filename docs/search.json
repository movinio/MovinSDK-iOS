{"Protocols/MovinSpaceDetectorListener.html#/c:objc(pl)MovinSpaceDetectorListener(im)spaceDetector:didDetectSpace:":{"name":"-spaceDetector:didDetectSpace:","abstract":"<p>Is called when the MovinSpaceDetector determined that the space has been changed.</p>","parent_name":"MovinSpaceDetectorListener"},"Protocols/MovinSpaceDetectorListener.html#/c:objc(pl)MovinSpaceDetectorListener(im)spaceDetector:isValidSpace:":{"name":"-spaceDetector:isValidSpace:","abstract":"<p>Checks whether the specified MovinEntity is a valid space which can be used as a location.</p>","parent_name":"MovinSpaceDetectorListener"},"Protocols/MovinSpaceDetector.html#/c:objc(pl)MovinSpaceDetector(py)isStarted":{"name":"isStarted","abstract":"<p>Gets a value indicating whether or not the MovinSpaceDetector is running.</p>","parent_name":"MovinSpaceDetector"},"Protocols/MovinSpaceDetector.html#/c:objc(pl)MovinSpaceDetector(im)initialize:":{"name":"-initialize:","abstract":"<p>Manually initializes the MovinSpaceDetector (happens automatically the first time it is started).</p>","parent_name":"MovinSpaceDetector"},"Protocols/MovinSpaceDetector.html#/c:objc(pl)MovinSpaceDetector(im)startWithListener:":{"name":"-startWithListener:","abstract":"<p>Starts the MovinSpaceDetector and informs the given listener of each space change. The underlying system will only start when the first listener is added.</p>","parent_name":"MovinSpaceDetector"},"Protocols/MovinSpaceDetector.html#/c:objc(pl)MovinSpaceDetector(im)stopWithListener:":{"name":"-stopWithListener:","abstract":"<p>Stops informing the given listener of space change events. The underlying system will only stop when all listeners have been stopped.</p>","parent_name":"MovinSpaceDetector"},"Protocols/MovinSpaceDetector.html#/c:objc(pl)MovinSpaceDetector(im)isStartedForListener:":{"name":"-isStartedForListener:","abstract":"<p>Returns a value indicating whether the MovinSpaceDetector is started for the specified listener.</p>","parent_name":"MovinSpaceDetector"},"Protocols/MovinSpaceDetector.html#/c:objc(pl)MovinSpaceDetector(im)getCurrentSpaceForListener:":{"name":"-getCurrentSpaceForListener:","abstract":"<p>Gets the current space for the specified listener. Each listener determines their own valid spaces, which is why each listener can have a different space.</p>","parent_name":"MovinSpaceDetector"},"Protocols/MovinFloorDetectorListener.html#/c:objc(pl)MovinFloorDetectorListener(im)didDetectFloor:andNewFloor:":{"name":"-didDetectFloor:andNewFloor:","abstract":"<p>Is called when the MovinFloorDetector detected a floor change</p>","parent_name":"MovinFloorDetectorListener"},"Protocols/MovinFloorDetector.html#/c:objc(pl)MovinFloorDetector(py)isStarted":{"name":"isStarted","abstract":"<p>Gets whether or not this MovinFloorDetector is started</p>","parent_name":"MovinFloorDetector"},"Protocols/MovinFloorDetector.html#/c:objc(pl)MovinFloorDetector(py)currentFloor":{"name":"currentFloor","abstract":"<p>Gets the current floor</p>","parent_name":"MovinFloorDetector"},"Protocols/MovinFloorDetector.html#/c:objc(pl)MovinFloorDetector(im)initialize:":{"name":"-initialize:","abstract":"<p>Initializes the MovinFloorDetector</p>","parent_name":"MovinFloorDetector"},"Protocols/MovinFloorDetector.html#/c:objc(pl)MovinFloorDetector(im)startWithListener:":{"name":"-startWithListener:","abstract":"<p>Starts the MovinFloorDetector and informs the given listener of each floor change</p>","parent_name":"MovinFloorDetector"},"Protocols/MovinFloorDetector.html#/c:objc(pl)MovinFloorDetector(im)stopWithListener:":{"name":"-stopWithListener:","abstract":"<p>Stops informing the given listener of floor change events","parent_name":"MovinFloorDetector"},"Protocols/MovinFloorDetector.html#/c:objc(pl)MovinFloorDetector(im)isStartedForListener:":{"name":"-isStartedForListener:","abstract":"<p>Checks if the MovinFloorDetector is started for the given listener</p>","parent_name":"MovinFloorDetector"},"Protocols/MovinFloorDetector.html":{"name":"MovinFloorDetector","abstract":"<p>Undocumented</p>"},"Protocols/MovinFloorDetectorListener.html":{"name":"MovinFloorDetectorListener","abstract":"<p>Undocumented</p>"},"Protocols/MovinSpaceDetector.html":{"name":"MovinSpaceDetector","abstract":"<p>Undocumented</p>"},"Protocols/MovinSpaceDetectorListener.html":{"name":"MovinSpaceDetectorListener","abstract":"<p>Defines methods that a listener of MovinSpaceDetector can implement.</p>"},"Enums/MovinTileStyleSymbolizer.html#/c:@E@MovinTileStyleSymbolizer@MovinTileStyleSymbolizerNone":{"name":"MovinTileStyleSymbolizerNone","abstract":"<p>Do not draw the entity.</p>","parent_name":"MovinTileStyleSymbolizer"},"Enums/MovinTileStyleSymbolizer.html#/c:@E@MovinTileStyleSymbolizer@MovinTileStyleSymbolizerPolygon":{"name":"MovinTileStyleSymbolizerPolygon","abstract":"<p>Draw the entity as a polygon.</p>","parent_name":"MovinTileStyleSymbolizer"},"Enums/MovinTileStyleSymbolizer.html#/c:@E@MovinTileStyleSymbolizer@MovinTileStyleSymbolizerLine":{"name":"MovinTileStyleSymbolizerLine","abstract":"<p>Draw the entity as a line.</p>","parent_name":"MovinTileStyleSymbolizer"},"Enums/MovinTileStyleSymbolizer.html#/c:@E@MovinTileStyleSymbolizer@MovinTileStyleSymbolizerPoint":{"name":"MovinTileStyleSymbolizerPoint","abstract":"<p>Draw the entity as a single point.</p>","parent_name":"MovinTileStyleSymbolizer"},"Enums/MovinTileStyleSymbolizer.html#/c:@E@MovinTileStyleSymbolizer@MovinTileStyleSymbolizerText":{"name":"MovinTileStyleSymbolizerText","abstract":"<p>Draw the entity as text.</p>","parent_name":"MovinTileStyleSymbolizer"},"Enums/MovinTileStyleSymbolizer.html":{"name":"MovinTileStyleSymbolizer","abstract":"<p>Contains all available symbolizers.</p>"},"Classes/BaseSpaceDetector.html#/c:objc(cs)BaseSpaceDetector(py)map":{"name":"map","abstract":"<p>Gets the map to detect spaces for.</p>","parent_name":"BaseSpaceDetector"},"Classes/BaseSpaceDetector.html#/c:objc(cs)BaseSpaceDetector(py)spacePerListener":{"name":"spacePerListener","abstract":"<p>Undocumented</p>","parent_name":"BaseSpaceDetector"},"Classes/BaseSpaceDetector.html#/c:objc(cs)BaseSpaceDetector(py)listeners":{"name":"listeners","abstract":"<p>Undocumented</p>","parent_name":"BaseSpaceDetector"},"Classes/BaseSpaceDetector.html#/c:objc(cs)BaseSpaceDetector(im)initWithMap:":{"name":"-initWithMap:","abstract":"<p>Initializes a new BaseSpaceDetector object with the specified map.</p>","parent_name":"BaseSpaceDetector"},"Classes/BaseSpaceDetector.html#/c:objc(cs)BaseSpaceDetector(im)selectedSpaces:":{"name":"-selectedSpaces:","abstract":"<p>Called by the implementation whenever they detected new spaces where the user could be.","parent_name":"BaseSpaceDetector"},"Classes/BaseSpaceDetector.html#/c:objc(cs)BaseSpaceDetector(im)loadCustomResources:":{"name":"-loadCustomResources:","abstract":"<p>Method to be implemented by inheriting implementations if they need additional resources, apart from map and beacon data</p>","parent_name":"BaseSpaceDetector"},"Classes/BaseSpaceDetector.html#/c:objc(cs)BaseSpaceDetector(im)onStart":{"name":"-onStart","abstract":"<p>Called when the SpaceDetector needs to start.</p>","parent_name":"BaseSpaceDetector"},"Classes/BaseSpaceDetector.html#/c:objc(cs)BaseSpaceDetector(im)onStop":{"name":"-onStop","abstract":"<p>Called when the SpaceDetector needs to stop.</p>","parent_name":"BaseSpaceDetector"},"Classes/BaseFloorDetector.html#/c:objc(cs)BaseFloorDetector(py)map":{"name":"map","abstract":"<p>Gets the map to detect floors for</p>","parent_name":"BaseFloorDetector"},"Classes/BaseFloorDetector.html#/c:objc(cs)BaseFloorDetector(py)listeners":{"name":"listeners","abstract":"<p>Gets the list that contains all listeners</p>","parent_name":"BaseFloorDetector"},"Classes/BaseFloorDetector.html#/c:objc(cs)BaseFloorDetector(py)currentFloor":{"name":"currentFloor","abstract":"<p>Gets the current floor, or nil if no floor has been determined yet.</p>","parent_name":"BaseFloorDetector"},"Classes/BaseFloorDetector.html#/c:objc(cs)BaseFloorDetector(im)initWithMap:":{"name":"-initWithMap:","abstract":"<p>Creates a new BaseFloorDetector</p>","parent_name":"BaseFloorDetector"},"Classes/BaseFloorDetector.html#/c:objc(cs)BaseFloorDetector(im)detectFloor:":{"name":"-detectFloor:","abstract":"<p>Called by the implementations whenever they detect a new floor.","parent_name":"BaseFloorDetector"},"Classes/BaseFloorDetector.html#/c:objc(cs)BaseFloorDetector(im)loadCustomResources:":{"name":"-loadCustomResources:","abstract":"<p>Method to be implemented by inheriting implementations if they need additional resources, apart from map and beacon data</p>","parent_name":"BaseFloorDetector"},"Classes/BaseFloorDetector.html#/c:objc(cs)BaseFloorDetector(im)onStart":{"name":"-onStart","abstract":"<p>Called when the FloorDetector needs to start</p>","parent_name":"BaseFloorDetector"},"Classes/BaseFloorDetector.html#/c:objc(cs)BaseFloorDetector(im)onStop":{"name":"-onStop","abstract":"<p>Called when the FloorDetector needs to stop</p>","parent_name":"BaseFloorDetector"},"Classes/BaseFloorDetector.html":{"name":"BaseFloorDetector","abstract":"<p>Undocumented</p>"},"Classes/BaseSpaceDetector.html":{"name":"BaseSpaceDetector","abstract":"<p>Represents an abstract base implementation of space detectors.</p>"},"Classes/MovinGMSTileLayer.html#/c:objc(cs)MovinGMSTileLayer(im)initWithMapView:":{"name":"-initWithMapView:","abstract":"<p>Initializes a new MovinGMSTileLayer object with the specified map view.</p>","parent_name":"MovinGMSTileLayer"},"Classes/MovinGMSTileLayer.html#/c:objc(cs)MovinGMSTileLayer(py)tileProvider":{"name":"tileProvider","abstract":"<p>Gets the tile provider this layer used the tiles of.</p>","parent_name":"MovinGMSTileLayer"},"Classes/MovinGMSMarker.html#/c:objc(cs)MovinGMSMarker(im)initWithMap:andPosition:andFloor:andBearing:":{"name":"-initWithMap:andPosition:andFloor:andBearing:","abstract":"<p>Initializes a new MovinGMSMarker object with the specified map view, position, floor and bearing.</p>","parent_name":"MovinGMSMarker"},"Classes/MovinGMSMarker.html#/c:objc(cs)MovinGMSMarker(py)imageScale":{"name":"imageScale","abstract":"<p>Gets or sets the scale if the image.</p>","parent_name":"MovinGMSMarker"},"Classes/MovinGMSMarker.html#/c:objc(cs)MovinGMSMarker(py)image":{"name":"image","abstract":"<p>Gets or sets the image displayed at the location of this marker.</p>","parent_name":"MovinGMSMarker"},"Classes/MovinGMSLabel.html#/c:objc(cs)MovinGMSLabel(py)text":{"name":"text","abstract":"<p>Gets or sets the text which will be drawn on this label.</p>","parent_name":"MovinGMSLabel"},"Classes/MovinGMSLabel.html#/c:objc(cs)MovinGMSLabel(py)font":{"name":"font","abstract":"<p>Gets or sets the font in which the text will be drawn. The default value is <q>Arial 30</q>.</p>","parent_name":"MovinGMSLabel"},"Classes/MovinGMSLabel.html#/c:objc(cs)MovinGMSLabel(py)textColor":{"name":"textColor","abstract":"<p>Gets or sets the text color in which the text will be drawn. The default value is black.</p>","parent_name":"MovinGMSLabel"},"Classes/MovinGMSLabel.html#/c:objc(cs)MovinGMSLabel(py)textHaloColor":{"name":"textHaloColor","abstract":"<p>Gets or sets the halo color with which the text will be drawn. The default value is white.</p>","parent_name":"MovinGMSLabel"},"Classes/MovinGMSLabel.html#/c:objc(cs)MovinGMSLabel(py)textHaloWidth":{"name":"textHaloWidth","abstract":"<p>Gets or sets the halo width. The default value is 1.0.</p>","parent_name":"MovinGMSLabel"},"Classes/MovinGMSLabel.html#/c:objc(cs)MovinGMSLabel(im)initWithMap:andPosition:andFloor:andBounds:":{"name":"-initWithMap:andPosition:andFloor:andBounds:","abstract":"<p>Initializes a new MovinGMSLabel object with the specified map, position, floor and bounds.</p>","parent_name":"MovinGMSLabel"},"Classes/MovinGMSLabel.html#/c:objc(cs)MovinGMSLabel(im)initWithMap:andPosition:andFloor:andBearing:andBounds:":{"name":"-initWithMap:andPosition:andFloor:andBearing:andBounds:","abstract":"<p>Initializes a new MovinGMSLabel object with the specified map, position, floor, bearing and bounds.</p>","parent_name":"MovinGMSLabel"},"Protocols/MovinGMSImageRendererManagerDelegate.html#/c:objc(pl)MovinGMSImageRendererManagerDelegate(im)imageRendererManager:shouldRenderEntity:":{"name":"-imageRendererManager:shouldRenderEntity:","abstract":"<p>Returns a value indicating whether the image renderer manager should create a renderer for the specified","parent_name":"MovinGMSImageRendererManagerDelegate"},"Protocols/MovinGMSImageRendererManagerDelegate.html#/c:objc(pl)MovinGMSImageRendererManagerDelegate(im)imageRendererManagerDidLoadImageRenderers:":{"name":"-imageRendererManagerDidLoadImageRenderers:","abstract":"<p>Occurs when image renderers have been loaded for the entities for the active style.</p>","parent_name":"MovinGMSImageRendererManagerDelegate"},"Classes/MovinGMSImageRendererManager.html#/c:objc(cs)MovinGMSImageRendererManager(py)loadEntities":{"name":"loadEntities","abstract":"<p>Gets or sets whether entities should automatically be loaded onto the map.</p>","parent_name":"MovinGMSImageRendererManager"},"Classes/MovinGMSImageRendererManager.html#/c:objc(cs)MovinGMSImageRendererManager(py)delegate":{"name":"delegate","abstract":"<p>Gets or sets the delegate of this image renderer manager.</p>","parent_name":"MovinGMSImageRendererManager"},"Classes/MovinGMSImageRendererManager.html#/c:objc(cs)MovinGMSImageRendererManager(py)allRenderers":{"name":"allRenderers","abstract":"<p>Gets all renders registered to this image renderer manager.</p>","parent_name":"MovinGMSImageRendererManager"},"Classes/MovinGMSImageRendererManager.html#/c:objc(cs)MovinGMSImageRendererManager(im)refreshEntities":{"name":"-refreshEntities","abstract":"<p>Refreshes the visible entities.</p>","parent_name":"MovinGMSImageRendererManager"},"Classes/MovinGMSImageRendererManager.html#/c:objc(cs)MovinGMSImageRendererManager(im)getImageRendererForOverlay:":{"name":"-getImageRendererForOverlay:","abstract":"<p>Returns the image renderer associated with the specified overlay.</p>","parent_name":"MovinGMSImageRendererManager"},"Classes/MovinGMSImageRendererManager.html#/c:objc(cs)MovinGMSImageRendererManager(im)getImageRendererForEntity:":{"name":"-getImageRendererForEntity:","abstract":"<p>Returns the image renderer associated with the specified entity.</p>","parent_name":"MovinGMSImageRendererManager"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)map":{"name":"map","abstract":"<p>Gets or sets the map this image renderer should draw on.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)position":{"name":"position","abstract":"<p>Gets or sets the position where the image should be drawn to.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)floor":{"name":"floor","abstract":"<p>Gets or sets the floor the image should be drawn on.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)image":{"name":"image","abstract":"<p>Gets the image which will be drawn.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)bearing":{"name":"bearing","abstract":"<p>Gets or sets the bearing of the image.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)bounds":{"name":"bounds","abstract":"<p>Gets or sets the bounds in which the image should be drawn.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)entity":{"name":"entity","abstract":"<p>Gets the entity associated with this image renderer if it has been automatically loaded.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)scaling":{"name":"scaling","abstract":"<p>Gets or sets the scaling style of the image.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)rotation":{"name":"rotation","abstract":"<p>Gets or sets the rotation style of the image.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)metersPerPixel":{"name":"metersPerPixel","abstract":"<p>Gets or sets the size of a pixel in meters on zoom level 0.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)fixedZoomLevel":{"name":"fixedZoomLevel","abstract":"<p>Gets or sets the zoom level at which the sizing is based when the sizingStyle is set to","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)minZoomLevel":{"name":"minZoomLevel","abstract":"<p>Gets or sets the minimum zoom level from which the image is visible.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)maxZoomLevel":{"name":"maxZoomLevel","abstract":"<p>Gets or sets the maximum zoom level to which the image is visible.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)opacity":{"name":"opacity","abstract":"<p>Gets or sets the opacity of the image.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)anchor":{"name":"anchor","abstract":"<p>Gets or sets the anchor point of the image.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)visible":{"name":"visible","abstract":"<p>Gets a value indicating whether this element is visible.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)imageSize":{"name":"imageSize","abstract":"<p>Gets the size of the image.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)renderingSuspended":{"name":"renderingSuspended","abstract":"<p>Gets or sets whether the rendering of this image renderer should be suspended.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)tappable":{"name":"tappable","abstract":"<p>Gets or sets a value indicating whether this image renderer should cause tap notifications.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)zIndex":{"name":"zIndex","abstract":"<p>Gets or sets the Z index of this image renderer.</p>","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(py)userData":{"name":"userData","abstract":"<p>Gets or sets user data. You can use this property to associate an arbitrary object with this renderer. Note that","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(im)invalidate":{"name":"-invalidate","abstract":"<p>Invalidates the image of this instance and requests the image to be re-rendered. This method should only","parent_name":"MovinGMSImageRenderer"},"Classes/MovinGMSImageRenderer.html#/c:objc(cs)MovinGMSImageRenderer(im)renderImage:":{"name":"-renderImage:","abstract":"<p>This method is called by the invalidation process when a new image should be rendered. This method should","parent_name":"MovinGMSImageRenderer"},"Protocols/MovinGMSMapViewListener.html#/c:objc(pl)MovinGMSMapViewListener(im)mapView:didSetMap:":{"name":"-mapView:didSetMap:","abstract":"<p>A map has been assigned to the map view.</p>","parent_name":"MovinGMSMapViewListener"},"Protocols/MovinGMSMapViewListener.html#/c:objc(pl)MovinGMSMapViewListener(im)mapView:didSetMapStyle:":{"name":"-mapView:didSetMapStyle:","abstract":"<p>A map style has been assigned to the map view.</p>","parent_name":"MovinGMSMapViewListener"},"Protocols/MovinGMSMapViewListener.html#/c:objc(pl)MovinGMSMapViewListener(im)mapView:didSetMapLayer:":{"name":"-mapView:didSetMapLayer:","abstract":"<p>A map layer has been assigned to the map view.</p>","parent_name":"MovinGMSMapViewListener"},"Protocols/MovinGMSMapViewListener.html#/c:objc(pl)MovinGMSMapViewListener(im)mapView:didSetTileProvider:":{"name":"-mapView:didSetTileProvider:","abstract":"<p>A tile provider has been assigned to the map view.</p>","parent_name":"MovinGMSMapViewListener"},"Protocols/MovinGMSMapViewListener.html#/c:objc(pl)MovinGMSMapViewListener(im)mapView:didTapImageRenderer:":{"name":"-mapView:didTapImageRenderer:","abstract":"<p>An image renderer has been tapped within the map view.</p>","parent_name":"MovinGMSMapViewListener"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)movinMapLayer":{"name":"movinMapLayer","abstract":"<p>Gets or sets the map layer which will be used to draw the map.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)movinMapStyle":{"name":"movinMapStyle","abstract":"<p>Gets or sets the map style which will be used to draw the map.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)movinMap":{"name":"movinMap","abstract":"<p>Gets or sets the map which will be used to draw.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)tileProvider":{"name":"tileProvider","abstract":"<p>Gets the tile provider which is used to provide tiles.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)tileLayer":{"name":"tileLayer","abstract":"<p>Gets the tile layer which provides the tiles to GoogleMaps.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)floorSwitcher":{"name":"floorSwitcher","abstract":"<p>Gets the floor switcher button instance.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)imageRendererManager":{"name":"imageRendererManager","abstract":"<p>Gets the image renderer manager.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)movinTileLayerZIndex":{"name":"movinTileLayerZIndex","abstract":"<p>Gets or sets the Z-index used by Movin tile layers.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)movinDefaultMarkerZIndex":{"name":"movinDefaultMarkerZIndex","abstract":"<p>Gets or sets the default Z-index used by Movin markers.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)movinDefaultLabelZIndex":{"name":"movinDefaultLabelZIndex","abstract":"<p>Gets or sets the default Z-index used by Movin labels.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)compassRotation":{"name":"compassRotation","abstract":"<p>Gets or sets a value indicating whether the camera of this map view should automatically rotate based on","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)compassRotationAfterGestureDelay":{"name":"compassRotationAfterGestureDelay","abstract":"<p>Gets or sets the interval after each map view gesture in which the heading of the camera should not be","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)compass":{"name":"compass","abstract":"<p>Gets the MovinSmoothCompass instance used by this map view when compassRotation is set to YES.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)lastCameraChangeByGesture":{"name":"lastCameraChangeByGesture","abstract":"<p>Gets the timestamp the camera has been moved by a user gesture last.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(py)floor":{"name":"floor","abstract":"<p>Gets or sets the currently visible floor. If the tile provider has not yet been loaded (the map style/layer have not yet been set), this value cannot be set or get.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(im)fitToMap":{"name":"-fitToMap","abstract":"<p>Moves to camera to the currently set map and zoom in to make it fit the screen of the device.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(im)zoomOnMap:":{"name":"-zoomOnMap:","abstract":"<p>Moves the camera to the currently set map and zooms to the specified zoom level.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(im)addListener:":{"name":"-addListener:","abstract":"<p>Adds a listener to this map view.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html#/c:objc(cs)MovinGMSMapView(im)removeListener:":{"name":"-removeListener:","abstract":"<p>Removes a listener from this map view.</p>","parent_name":"MovinGMSMapView"},"Classes/MovinGMSMapView.html":{"name":"MovinGMSMapView","abstract":"<p>Represents a map view which will automatically draw the Movin map, labels, markers and floor switcher. Each"},"Protocols/MovinGMSMapViewListener.html":{"name":"MovinGMSMapViewListener","abstract":"<p>Contains methods for listening to events occurring in a MovinGMSMapView instance.</p>"},"Classes/MovinGMSImageRenderer.html":{"name":"MovinGMSImageRenderer","abstract":"<p>Represents an object which can be drawn on a MovinGMSMapView.</p>"},"Classes/MovinGMSImageRendererManager.html":{"name":"MovinGMSImageRendererManager","abstract":"<p>Manages the hiding, showing and drawing of MovinGMSImageRenderer instances.</p>"},"Protocols/MovinGMSImageRendererManagerDelegate.html":{"name":"MovinGMSImageRendererManagerDelegate","abstract":"<p>Defines methods that a delegate of APIRequest must implement to be able to determine which entities should"},"Classes/MovinGMSLabel.html":{"name":"MovinGMSLabel","abstract":"<p>Represents a label which can be drawn on a MovinGSMSMapView.</p>"},"Classes/MovinGMSMarker.html":{"name":"MovinGMSMarker","abstract":"<p>Represents a marker image which can be drawn on a MovinGMSMapView.</p>"},"Classes/MovinGMSTileLayer.html":{"name":"MovinGMSTileLayer","abstract":"<p>Represents a tile layer which will render tiles provided by the MovinSDK.</p>"},"Classes/GeoShape.html#/c:objc(cs)GeoShape(py)boundingBox":{"name":"boundingBox","abstract":"<p>Gets the bounding box which fits around this instance.</p>","parent_name":"GeoShape"},"Classes/GeoShape.html#/c:objc(cs)GeoShape(im)linesForIntersect":{"name":"-linesForIntersect","abstract":"<p>Gets the lines which define this shape. These lines will be used to check for intersections with","parent_name":"GeoShape"},"Classes/GeoShape.html#/c:objc(cs)GeoShape(im)pointsForIntersect":{"name":"-pointsForIntersect","abstract":"<p>Gets the points which define this shape. These points will be used to check for intersections with","parent_name":"GeoShape"},"Classes/GeoShape.html#/c:objc(cs)GeoShape(im)intersectsWithShape:":{"name":"-intersectsWithShape:","abstract":"<p>Returns a value indicating whether the specified shape intersects with this instance.</p>","parent_name":"GeoShape"},"Classes/GeoShape.html#/c:objc(cs)GeoShape(im)containsPoint:":{"name":"-containsPoint:","abstract":"<p>Returns a value indicating whether the specified point is located within the boundaries of this shape.</p>","parent_name":"GeoShape"},"Classes/GeoShape.html#/c:objc(cs)GeoShape(im)containsShape:":{"name":"-containsShape:","abstract":"<p>Returns a value indicating whether the specified shape is completely encased within the boundaries of this shape.</p>","parent_name":"GeoShape"},"Classes/GeoShape.html#/c:objc(cs)GeoShape(im)distanceToPoint:":{"name":"-distanceToPoint:","abstract":"<p>Returns the distance between the specified point and this shape in meters.</p>","parent_name":"GeoShape"},"Classes/GeoShape.html#/c:objc(cs)GeoShape(im)intersectsWithLineFrom:to:":{"name":"-intersectsWithLineFrom:to:","abstract":"<p>Returns a value indicating whether the specified line intersects with this shape.</p>","parent_name":"GeoShape"},"Classes/GeoPolygon.html#/c:objc(cs)GeoPolygon(py)rings":{"name":"rings","abstract":"<p>Contains the rings of this polygon.</p>","parent_name":"GeoPolygon"},"Classes/GeoPolygon.html#/c:objc(cs)GeoPolygon(im)init":{"name":"-init","abstract":"<p>Use initWithRings: instead.</p>","parent_name":"GeoPolygon"},"Classes/GeoPolygon.html#/c:objc(cs)GeoPolygon(im)initWithRings:":{"name":"-initWithRings:","abstract":"<p>Initializes a GeoPolygon with the specified rings.</p>","parent_name":"GeoPolygon"},"Classes/GeoPolygon.html#/c:objc(cs)GeoPolygon(cm)polygonWithRings:":{"name":"+polygonWithRings:","abstract":"<p>Returns a newly created GeoPolygon object with the specified rings.</p>","parent_name":"GeoPolygon"},"Classes/GeoPolygon.html#/c:objc(cs)GeoPolygon(im)isEqualToPolygon:":{"name":"-isEqualToPolygon:","abstract":"<p>Returns a value indicating whether this instance and the specified GeoPolygon.</p>","parent_name":"GeoPolygon"},"Classes/GeoMultiPolygon.html#/c:objc(cs)GeoMultiPolygon(py)polygons":{"name":"polygons","abstract":"<p>Contains the polygons of this collection.</p>","parent_name":"GeoMultiPolygon"},"Classes/GeoMultiPolygon.html#/c:objc(cs)GeoMultiPolygon(im)init":{"name":"-init","abstract":"<p>Use initWithPolygons: instead.</p>","parent_name":"GeoMultiPolygon"},"Classes/GeoMultiPolygon.html#/c:objc(cs)GeoMultiPolygon(im)initWithPolygons:":{"name":"-initWithPolygons:","abstract":"<p>Initializes a GeoMultiPolygon with the specified polygons.</p>","parent_name":"GeoMultiPolygon"},"Classes/GeoMultiPolygon.html#/c:objc(cs)GeoMultiPolygon(cm)multiPolygonWithPolygons:":{"name":"+multiPolygonWithPolygons:","abstract":"<p>Returns a newly created GeoMultiPolygon object with the specified polygons.</p>","parent_name":"GeoMultiPolygon"},"Classes/GeoMultiPolygon.html#/c:objc(cs)GeoMultiPolygon(im)isEqualToMultiPolygon:":{"name":"-isEqualToMultiPolygon:","abstract":"<p>Returns a value indicating whether this instance and the specified GeoMultiPolygon.</p>","parent_name":"GeoMultiPolygon"},"Classes/GeoMultiPoint.html#/c:objc(cs)GeoMultiPoint(py)points":{"name":"points","abstract":"<p>Contains the points of this collection.</p>","parent_name":"GeoMultiPoint"},"Classes/GeoMultiPoint.html#/c:objc(cs)GeoMultiPoint(im)init":{"name":"-init","abstract":"<p>Use initWithPoints: instead.</p>","parent_name":"GeoMultiPoint"},"Classes/GeoMultiPoint.html#/c:objc(cs)GeoMultiPoint(im)initWithPoints:":{"name":"-initWithPoints:","abstract":"<p>Initializes a GeoMultiPoint with the specified points.</p>","parent_name":"GeoMultiPoint"},"Classes/GeoMultiPoint.html#/c:objc(cs)GeoMultiPoint(cm)multiPointWithPoints:":{"name":"+multiPointWithPoints:","abstract":"<p>Returns a newly created GeoMultiPoint object with the specified points.</p>","parent_name":"GeoMultiPoint"},"Classes/GeoMultiPoint.html#/c:objc(cs)GeoMultiPoint(im)isEqualToMultiPoint:":{"name":"-isEqualToMultiPoint:","abstract":"<p>Returns a value indicating whether this instance and the specified GeoMultiPoint.</p>","parent_name":"GeoMultiPoint"},"Classes/GeoMultiLineString.html#/c:objc(cs)GeoMultiLineString(py)lineStrings":{"name":"lineStrings","abstract":"<p>Contains the line strings of this collection.</p>","parent_name":"GeoMultiLineString"},"Classes/GeoMultiLineString.html#/c:objc(cs)GeoMultiLineString(im)init":{"name":"-init","abstract":"<p>Use initWithLineStrings: instead.</p>","parent_name":"GeoMultiLineString"},"Classes/GeoMultiLineString.html#/c:objc(cs)GeoMultiLineString(im)initWithLineStrings:":{"name":"-initWithLineStrings:","abstract":"<p>Initializes a GeoMultiLineString with the specified line strings.</p>","parent_name":"GeoMultiLineString"},"Classes/GeoMultiLineString.html#/c:objc(cs)GeoMultiLineString(cm)multiLineStringWithLineStrings:":{"name":"+multiLineStringWithLineStrings:","abstract":"<p>Returns a newly created GeoMultiLineString object with the specified line strings.</p>","parent_name":"GeoMultiLineString"},"Classes/GeoMultiLineString.html#/c:objc(cs)GeoMultiLineString(im)isEqualToMultiLineString:":{"name":"-isEqualToMultiLineString:","abstract":"<p>Returns a value indicating whether this instance and the specified GeoMultiLineString.</p>","parent_name":"GeoMultiLineString"},"Classes/GeoLinearRing.html#/c:objc(cs)GeoLinearRing(py)points":{"name":"points","abstract":"<p>Contains the points of this ring.</p>","parent_name":"GeoLinearRing"},"Classes/GeoLinearRing.html#/c:objc(cs)GeoLinearRing(im)init":{"name":"-init","abstract":"<p>Use initWithPoints: instead.</p>","parent_name":"GeoLinearRing"},"Classes/GeoLinearRing.html#/c:objc(cs)GeoLinearRing(im)initWithPoints:":{"name":"-initWithPoints:","abstract":"<p>Initializes a GeoLinearRing with the specified points.</p>","parent_name":"GeoLinearRing"},"Classes/GeoLinearRing.html#/c:objc(cs)GeoLinearRing(cm)ringWithPoints:":{"name":"+ringWithPoints:","abstract":"<p>Returns a newly created GeoLinearRing object with the specified points.</p>","parent_name":"GeoLinearRing"},"Classes/GeoLinearRing.html#/c:objc(cs)GeoLinearRing(im)isEqualToLinearRing:":{"name":"-isEqualToLinearRing:","abstract":"<p>Returns a value indicating whether this instance and the specified GeoLinearRing.</p>","parent_name":"GeoLinearRing"},"Classes/GeoLineString.html#/c:objc(cs)GeoLineString(py)points":{"name":"points","abstract":"<p>Contains the points of this line string.</p>","parent_name":"GeoLineString"},"Classes/GeoLineString.html#/c:objc(cs)GeoLineString(im)init":{"name":"-init","abstract":"<p>Use initWithPoints: instead.</p>","parent_name":"GeoLineString"},"Classes/GeoLineString.html#/c:objc(cs)GeoLineString(im)initWithPoints:":{"name":"-initWithPoints:","abstract":"<p>Initializes a GeoLinearRing with the specified points.</p>","parent_name":"GeoLineString"},"Classes/GeoLineString.html#/c:objc(cs)GeoLineString(cm)lineWithPoints:":{"name":"+lineWithPoints:","abstract":"<p>Returns a newly created GeoLinearRing object with the specified points.</p>","parent_name":"GeoLineString"},"Classes/GeoLineString.html#/c:objc(cs)GeoLineString(im)isEqualToLineString:":{"name":"-isEqualToLineString:","abstract":"<p>Returns a value indicating whether this instance and the specified GeoLineString.</p>","parent_name":"GeoLineString"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(py)lat":{"name":"lat","abstract":"<p>Gets the latitude of this geo coordinate.</p>","parent_name":"GeoLatLng"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(py)lng":{"name":"lng","abstract":"<p>Gets the longitude of this geo coordinate.</p>","parent_name":"GeoLatLng"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(py)CLLocation":{"name":"CLLocation","abstract":"<p>DEPRECATED: Use coordinate instead.</p>","parent_name":"GeoLatLng"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(py)coordinate":{"name":"coordinate","abstract":"<p>Gets a CLLocationCoordinate2D instance representing the same geographical coordinate.</p>","parent_name":"GeoLatLng"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(im)init":{"name":"-init","abstract":"<p>Use initWithLat:andLng: instead.</p>","parent_name":"GeoLatLng"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(im)initWithLat:andLng:":{"name":"-initWithLat:andLng:","abstract":"<p>Initializes a new GeoLatLng coordinate with a latitude and longitude values.</p>","parent_name":"GeoLatLng"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(im)isEqualToLatLng:":{"name":"-isEqualToLatLng:","abstract":"<p>Returns a value indicating whether this instance and the specified GeoLatLng are equal.</p>","parent_name":"GeoLatLng"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(cm)pointWithLat:andLng:":{"name":"+pointWithLat:andLng:","abstract":"<p>Returns a newly created point with the specified latitude and longitude.</p>","parent_name":"GeoLatLng"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(cm)pointWithLocation:":{"name":"+pointWithLocation:","abstract":"<p>Use pointWithCoordinate: instead.</p>","parent_name":"GeoLatLng"},"Classes/GeoLatLng.html#/c:objc(cs)GeoLatLng(cm)pointWithCoordinate:":{"name":"+pointWithCoordinate:","abstract":"<p>Returns a newly created point with the specified CLLocationCoordinate2D.</p>","parent_name":"GeoLatLng"},"Classes/GeoGeometryCollection.html#/c:objc(cs)GeoGeometryCollection(py)geometries":{"name":"geometries","abstract":"<p>Contains the geometries of this geometry collection.</p>","parent_name":"GeoGeometryCollection"},"Classes/GeoGeometryCollection.html#/c:objc(cs)GeoGeometryCollection(im)init":{"name":"-init","abstract":"<p>Use initWithGeometries: instead.</p>","parent_name":"GeoGeometryCollection"},"Classes/GeoGeometryCollection.html#/c:objc(cs)GeoGeometryCollection(im)initWithGeometries:":{"name":"-initWithGeometries:","abstract":"<p>Initializes a GeoGeometryCollection with the specified geometries.</p>","parent_name":"GeoGeometryCollection"},"Classes/GeoGeometryCollection.html#/c:objc(cs)GeoGeometryCollection(cm)collectionWithGeometries:":{"name":"+collectionWithGeometries:","abstract":"<p>Returns a newly created GeoGeometryCollection object with the specified geometries.</p>","parent_name":"GeoGeometryCollection"},"Classes/GeoGeometryCollection.html#/c:objc(cs)GeoGeometryCollection(im)isEqualToGeometryCollection:":{"name":"-isEqualToGeometryCollection:","abstract":"<p>Returns a value indicating whether this instance and the specified GeoGeometryCollection.</p>","parent_name":"GeoGeometryCollection"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)origin":{"name":"origin","abstract":"<p>Gets the origin of this axis aligned bounding box.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)width":{"name":"width","abstract":"<p>Gets the width of this axis aligned bounding box.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)height":{"name":"height","abstract":"<p>Gets the height of this axis aligned bounding box.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)leftLng":{"name":"leftLng","abstract":"<p>Gets the leftmost longitude coordinate.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)rightLng":{"name":"rightLng","abstract":"<p>Gets the rightmost longitude coordinate.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)topLat":{"name":"topLat","abstract":"<p>Gets the topmost latitude coordinate.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)bottomLat":{"name":"bottomLat","abstract":"<p>Gets the bottommost latitude coordinate.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)size":{"name":"size","abstract":"<p>Gets the size of this box.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)topLeft":{"name":"topLeft","abstract":"<p>Gets the top-left coordinates.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)topRight":{"name":"topRight","abstract":"<p>Gets the top-right coordinates.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)bottomLeft":{"name":"bottomLeft","abstract":"<p>Gets the bottom-left coordinates.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(py)bottomRight":{"name":"bottomRight","abstract":"<p>Gets the bottom-right coordinates.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(im)init":{"name":"-init","abstract":"<p>Use initWithOrigin:andWidth:andHeight: instead.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(im)initWithOrigin:andWidth:andHeight:":{"name":"-initWithOrigin:andWidth:andHeight:","abstract":"<p>Initializes a new GeoAABB object with the specified origin and size.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(im)initWithCorner:andCorner:":{"name":"-initWithCorner:andCorner:","abstract":"<p>Initializes a new GeoAABB object with the specified corners.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(cm)aabbWithCorner:andCorner:":{"name":"+aabbWithCorner:andCorner:","abstract":"<p>Returns a newly created axis aligned bounding box with the specified corners.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(cm)aabbWithOrigin:andWidth:andHeight:":{"name":"+aabbWithOrigin:andWidth:andHeight:","abstract":"<p>Returns a newly created axis aligned bounding box with the specified origin and size.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(im)intersectsWithAABB:":{"name":"-intersectsWithAABB:","abstract":"<p>Gets a value indicating whether the specified box intersects with this instance.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html#/c:objc(cs)GeoAABB(im)isEqualToAABB:":{"name":"-isEqualToAABB:","abstract":"<p>Returns a value indicating whether this instance and the specified GeoAABB.</p>","parent_name":"GeoAABB"},"Classes/GeoAABB.html":{"name":"GeoAABB","abstract":"<p>Represents a geographical axis aligned bounding box.</p>"},"Classes/GeoGeometryCollection.html":{"name":"GeoGeometryCollection","abstract":"<p>Represents a collection of geometries.</p>"},"Classes/GeoLatLng.html":{"name":"GeoLatLng","abstract":"<p>Represents a geographical point.</p>"},"Classes/GeoLineString.html":{"name":"GeoLineString","abstract":"<p>Represents a string of geographical lines.</p>"},"Classes/GeoLinearRing.html":{"name":"GeoLinearRing","abstract":"<p>Represents a single component (ring) of a polygon.</p>"},"Classes/GeoMultiLineString.html":{"name":"GeoMultiLineString","abstract":"<p>Represents a collection of geographical line strings.</p>"},"Classes/GeoMultiPoint.html":{"name":"GeoMultiPoint","abstract":"<p>Represents a collection of geographical points.</p>"},"Classes/GeoMultiPolygon.html":{"name":"GeoMultiPolygon","abstract":"<p>Represents a collection of geographical polygons.</p>"},"Classes/GeoPolygon.html":{"name":"GeoPolygon","abstract":"<p>Represents a geographical polygon.</p>"},"Classes/GeoShape.html":{"name":"GeoShape","abstract":"<p>Represents a geographical shape.</p>"},"Enums/MovinTileStyleScaling.html#/c:@E@MovinTileStyleScaling@MovinTileStyleScalingFixed":{"name":"MovinTileStyleScalingFixed","abstract":"<p>The size will always be equal to the image or font size. Effectively this means that if the user zooms out the","parent_name":"MovinTileStyleScaling"},"Enums/MovinTileStyleScaling.html#/c:@E@MovinTileStyleScaling@MovinTileStyleScalingScaled":{"name":"MovinTileStyleScalingScaled","abstract":"<p>The size will only be equal to the image or font size on the zoom level defined by a fixed zoom level.</p>","parent_name":"MovinTileStyleScaling"},"Enums/MovinTileStyleRotation.html#/c:@E@MovinTileStyleRotation@MovinTileStyleRotationHorizontal":{"name":"MovinTileStyleRotationHorizontal","abstract":"<p>The POI or text will always keep a horizontal orientation.</p>","parent_name":"MovinTileStyleRotation"},"Enums/MovinTileStyleRotation.html#/c:@E@MovinTileStyleRotation@MovinTileStyleRotationRotated":{"name":"MovinTileStyleRotationRotated","abstract":"<p>The POI or text will rotate. In this mode the POI or text can appear up side down.</p>","parent_name":"MovinTileStyleRotation"},"Enums/MovinTileStyleRotation.html#/c:@E@MovinTileStyleRotation@MovinTileStyleRotationRotatedCanFlip":{"name":"MovinTileStyleRotationRotatedCanFlip","abstract":"<p>The POI or text will rotate. Text will flip when viewed upside down.</p>","parent_name":"MovinTileStyleRotation"},"Classes/MovinTileStyleTextRule.html#/c:objc(cs)MovinTileStyleTextRule(py)fontSize":{"name":"fontSize","abstract":"<p>Gets font size. How to translate this font size in an actual size is dependent on the","parent_name":"MovinTileStyleTextRule"},"Classes/MovinTileStyleTextRule.html#/c:objc(cs)MovinTileStyleTextRule(py)fontFamily":{"name":"fontFamily","abstract":"<p>Gets the font family. This can either be a common font available on most devices or a font which must be","parent_name":"MovinTileStyleTextRule"},"Classes/MovinTileStyleTextRule.html#/c:objc(cs)MovinTileStyleTextRule(py)isBold":{"name":"isBold","abstract":"<p>Gets a value indicating whether the font is bold.</p>","parent_name":"MovinTileStyleTextRule"},"Classes/MovinTileStyleTextRule.html#/c:objc(cs)MovinTileStyleTextRule(py)isItalics":{"name":"isItalics","abstract":"<p>Gets a value indicating whether the font is italic.</p>","parent_name":"MovinTileStyleTextRule"},"Classes/MovinTileStyleTextRule.html#/c:objc(cs)MovinTileStyleTextRule(py)hasTextHalo":{"name":"hasTextHalo","abstract":"<p>Gets a value indicating whether the text has a text halo.</p>","parent_name":"MovinTileStyleTextRule"},"Classes/MovinTileStyleTextRule.html#/c:objc(cs)MovinTileStyleTextRule(py)textHaloColor":{"name":"textHaloColor","abstract":"<p>Gets the color of the text halo.</p>","parent_name":"MovinTileStyleTextRule"},"Classes/MovinTileStyleTextRule.html#/c:objc(cs)MovinTileStyleTextRule(py)textHaloWidth":{"name":"textHaloWidth","abstract":"<p>Gets the width or thickness of the text halo.</p>","parent_name":"MovinTileStyleTextRule"},"Classes/MovinTileStyleTextRule.html#/c:objc(cs)MovinTileStyleTextRule(py)textProperty":{"name":"textProperty","abstract":"<p>Gets the name of the property which contains the text which should be displayed by the text entity.</p>","parent_name":"MovinTileStyleTextRule"},"Classes/MovinTileStyleTextRule.html#/c:objc(cs)MovinTileStyleTextRule(py)translationKeyProperty":{"name":"translationKeyProperty","abstract":"<p>Gets the name of the property which contains the translation key which should be displayed by the text entity.</p>","parent_name":"MovinTileStyleTextRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)symbolizer":{"name":"symbolizer","abstract":"<p>Gets a value indicating how to draw this rule.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)minZoom":{"name":"minZoom","abstract":"<p>Gets the minimum zoom level at which this rule is applied.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)maxZoom":{"name":"maxZoom","abstract":"<p>Gets the maximum zoom level at which this rule is applied.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)opacity":{"name":"opacity","abstract":"<p>Gets the opacity with which to render entities. This is a value between 0.0 and 1.0. 0.0 is 100%","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)fillColor":{"name":"fillColor","abstract":"<p>Gets the fill color.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)strokeColor":{"name":"strokeColor","abstract":"<p>Gets the stroke color.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)strokeWidth":{"name":"strokeWidth","abstract":"<p>Gets the stroke width.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)strokeIsScaled":{"name":"strokeIsScaled","abstract":"<p>Gets a value indicating whether the stroke line is scaled based  on a certain zoom level. This zoom level is defined","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)strokeZoomLevel":{"name":"strokeZoomLevel","abstract":"<p>Gets the zoom level to which the stroked line is scaled.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)dashArray":{"name":"dashArray","abstract":"<p>Gets an array of dash sizes which describes the line to be rendered as a dashed line. The elements in this array","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)dashOffset":{"name":"dashOffset","abstract":"<p>Gets the offset in pixels applied to the dashed line.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)scalingType":{"name":"scalingType","abstract":"<p>Gets the scaling style of the object.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)rotationType":{"name":"rotationType","abstract":"<p>Gets the rotation style of the object.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)fixedZoomLevel":{"name":"fixedZoomLevel","abstract":"<p>Gets the zoom level at which the object size is equal to the actual size of the image when the","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleRule.html#/c:objc(cs)MovinTileStyleRule(py)preRendered":{"name":"preRendered","abstract":"<p>Gets a value indicating whether this rule is rendered on the server-side.</p>","parent_name":"MovinTileStyleRule"},"Classes/MovinTileStyleLayer.html#/c:objc(cs)MovinTileStyleLayer(py)subType":{"name":"subType","abstract":"<p>Gets the sub type this layer contains the rules of.</p>","parent_name":"MovinTileStyleLayer"},"Classes/MovinTileStyleLayer.html#/c:objc(cs)MovinTileStyleLayer(py)rules":{"name":"rules","abstract":"<p>Gets the rules associated with this layer.</p>","parent_name":"MovinTileStyleLayer"},"Classes/MovinTileStyle.html#/c:objc(cs)MovinTileStyle(py)layers":{"name":"layers","abstract":"<p>Gets the layers of this tile style.</p>","parent_name":"MovinTileStyle"},"Classes/MovinTileStyle.html#/c:objc(cs)MovinTileStyle(im)getLayerForSubType:":{"name":"-getLayerForSubType:","abstract":"<p>Gets the layer for the specified sub type.</p>","parent_name":"MovinTileStyle"},"Classes/MovinMapStyle.html#/c:objc(cs)MovinMapStyle(py)tileManifest":{"name":"tileManifest","abstract":"<p>Gets the tile manifest this layer is a member of.</p>","parent_name":"MovinMapStyle"},"Classes/MovinMapStyle.html#/c:objc(cs)MovinMapStyle(py)tileStyle":{"name":"tileStyle","abstract":"<p>Gets the associated tile style.</p>","parent_name":"MovinMapStyle"},"Classes/MovinMapStyle.html#/c:objc(cs)MovinMapStyle(py)name":{"name":"name","abstract":"<p>Gets the name of this style.</p>","parent_name":"MovinMapStyle"},"Classes/MovinMapStyle.html#/c:objc(cs)MovinMapStyle(im)createTileProviderWithLayer:andError:":{"name":"-createTileProviderWithLayer:andError:","abstract":"<p>Create a MovinTileProvider for the specified layer with this style.</p>","parent_name":"MovinMapStyle"},"Classes/MovinMapStyle.html#/c:objc(cs)MovinMapStyle(im)createTileProviderWithLayerName:andError:":{"name":"-createTileProviderWithLayerName:andError:","abstract":"<p>Create a MovinTileProvider for the layer with the specified name with this style.</p>","parent_name":"MovinMapStyle"},"Classes/MovinMapLayer.html#/c:objc(cs)MovinMapLayer(py)tileManifest":{"name":"tileManifest","abstract":"<p>Gets the tile manifest this layer is a member of.</p>","parent_name":"MovinMapLayer"},"Classes/MovinMapLayer.html#/c:objc(cs)MovinMapLayer(py)name":{"name":"name","abstract":"<p>Gets the name of this layer.</p>","parent_name":"MovinMapLayer"},"Classes/MovinMapLayer.html#/c:objc(cs)MovinMapLayer(py)tileWidth":{"name":"tileWidth","abstract":"<p>Gets the width of the tiles in this layer.</p>","parent_name":"MovinMapLayer"},"Classes/MovinMapLayer.html#/c:objc(cs)MovinMapLayer(py)tileHeight":{"name":"tileHeight","abstract":"<p>Gets the height of the tiles in this layer.</p>","parent_name":"MovinMapLayer"},"Classes/MovinMapLayer.html#/c:objc(cs)MovinMapLayer(py)zoomLevels":{"name":"zoomLevels","abstract":"<p>Gets the zoom levels available in this layer.</p>","parent_name":"MovinMapLayer"},"Classes/MovinMapLayer.html#/c:objc(cs)MovinMapLayer(py)minZoomLevel":{"name":"minZoomLevel","abstract":"<p>Gets the minimum zoom level available for this layer.</p>","parent_name":"MovinMapLayer"},"Classes/MovinMapLayer.html#/c:objc(cs)MovinMapLayer(py)maxZoomLevel":{"name":"maxZoomLevel","abstract":"<p>Gets the maximum zoom level available for this layer.</p>","parent_name":"MovinMapLayer"},"Classes/MovinMapLayer.html#/c:objc(cs)MovinMapLayer(im)createTileProviderWithStyle:andError:":{"name":"-createTileProviderWithStyle:andError:","abstract":"<p>Create a MovinTileProvider for this layer with the specified style.</p>","parent_name":"MovinMapLayer"},"Classes/MovinMapLayer.html#/c:objc(cs)MovinMapLayer(im)createTileProviderWithStyleName:andError:":{"name":"-createTileProviderWithStyleName:andError:","abstract":"<p>Create a MovinTileProvider for this layer with the style with the specified name.</p>","parent_name":"MovinMapLayer"},"Classes/MovinMapLayer.html":{"name":"MovinMapLayer","abstract":"<p>Represents a tile layer of a map.</p>"},"Classes/MovinMapStyle.html":{"name":"MovinMapStyle","abstract":"<p>Represents a tile style of a map.</p>"},"Classes/MovinTileStyle.html":{"name":"MovinTileStyle","abstract":"<p>Represents a tile style.</p>"},"Classes/MovinTileStyleLayer.html":{"name":"MovinTileStyleLayer","abstract":"<p>Represents a single layer in a tile style.</p>"},"Classes/MovinTileStyleRule.html":{"name":"MovinTileStyleRule","abstract":"<p>Represents a single style rule for a layer in a tile style.</p>"},"Classes/MovinTileStyleTextRule.html":{"name":"MovinTileStyleTextRule","abstract":"<p>Represents a single text-style rule for a layer in a tile style.</p>"},"Enums/MovinTileStyleRotation.html":{"name":"MovinTileStyleRotation","abstract":"<p>Contains all available rotation behaviours of drawable components.</p>"},"Enums/MovinTileStyleScaling.html":{"name":"MovinTileStyleScaling","abstract":"<p>Contains all available scaling options of drawable components.</p>"},"Classes/AnalyticsService.html#/c:objc(cs)AnalyticsService(py)pendingUpdates":{"name":"pendingUpdates","abstract":"<p>Gets the number of updates which still need to be sent to the server.</p>","parent_name":"AnalyticsService"},"Classes/AnalyticsService.html#/c:objc(cs)AnalyticsService(cm)instance":{"name":"+instance","abstract":"<p>Returns the shared instance of the AnalyticsService, or nil if the MovinSDK has not yet been initialized.</p>","parent_name":"AnalyticsService"},"Classes/AnalyticsService.html#/c:objc(cs)AnalyticsService(im)getAnalyticsIdWithCallback:":{"name":"-getAnalyticsIdWithCallback:","abstract":"<p>provides the AnalyticsID through the given callback. The callback will be invoked when the initialization of","parent_name":"AnalyticsService"},"Classes/AnalyticsService.html#/c:objc(cs)AnalyticsService(im)flushPendingUpdates":{"name":"-flushPendingUpdates","abstract":"<p>Sends all remaining updates to the server.</p>","parent_name":"AnalyticsService"},"Classes/AnalyticsService.html":{"name":"AnalyticsService","abstract":"<p>The analytics service which collects analytical data and sends it to the server.</p>"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)focusedBackgroundColor":{"name":"focusedBackgroundColor","abstract":"<p>Gets or sets the background color of the current floor indicator and the floor switcher button.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)focusedForegroundColor":{"name":"focusedForegroundColor","abstract":"<p>Gets or sets the font color of the current floor.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)unfocusedBackgroundColor":{"name":"unfocusedBackgroundColor","abstract":"<p>Gets or sets the background color of the floors list.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)unfocusedForegroundColor":{"name":"unfocusedForegroundColor","abstract":"<p>Gets or sets the font color of floors in the floors list.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)font":{"name":"font","abstract":"<p>Gets or sets the font used within the floor switcher.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)maxHeight":{"name":"maxHeight","abstract":"<p>Gets or sets the maximum height of the floor switcher.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)itemHeight":{"name":"itemHeight","abstract":"<p>Gets or sets the height of every item in the floors list.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)cornerRadius":{"name":"cornerRadius","abstract":"<p>Gets or sets the corner radius of the floor switcher.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)margin":{"name":"margin","abstract":"<p>Gets or sets the margin between the floor switcher button and the floors list.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)animationDuration":{"name":"animationDuration","abstract":"<p>Gets or sets the duration of the floors list.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)tileProvider":{"name":"tileProvider","abstract":"<p>Gets or sets the tile provider this instance will switch the floor of.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)isOpen":{"name":"isOpen","abstract":"<p>Gets or sets a value indicating whether the floors list is visible (YES) or hidden (NO).</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(py)enabled":{"name":"enabled","abstract":"<p>Gets or sets a value indicating whether the floor switcher is enabled and visible.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(im)initWithTileProvider:":{"name":"-initWithTileProvider:","abstract":"<p>Initializes a new MovinFloorSwitcher object with the specified tile provider.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html#/c:objc(cs)MovinFloorSwitcher(im)reload":{"name":"-reload","abstract":"<p>Reload the floor buttons.</p>","parent_name":"MovinFloorSwitcher"},"Classes/MovinFloorSwitcher.html":{"name":"MovinFloorSwitcher","abstract":"<p>A graphical interface of a floor switcher button.</p>"},"Classes/MovinRoutingManager.html#/c:objc(cs)MovinRoutingManager(py)map":{"name":"map","abstract":"<p>Gets the map used when calculating routes.</p>","parent_name":"MovinRoutingManager"},"Classes/MovinRoutingManager.html#/c:objc(cs)MovinRoutingManager(im)getRouteFrom:to:withInstructionFeatures:callback:":{"name":"-getRouteFrom:to:withInstructionFeatures:callback:","abstract":"<p>Calculates a route from a certain point to a certain point with specific instruction features.</p>","parent_name":"MovinRoutingManager"},"Classes/MovinRoutingManager.html#/c:objc(cs)MovinRoutingManager(im)getRouteFrom:to:withInstructionFeatures:andAccessibilityMode:callback:":{"name":"-getRouteFrom:to:withInstructionFeatures:andAccessibilityMode:callback:","abstract":"<p>Calculates a route from a certain point to a certain point with specific instruction features.</p>","parent_name":"MovinRoutingManager"},"Classes/MovinRoutingManager.html#/c:objc(cs)MovinRoutingManager(im)getRouteFrom:to:withWaypoints:andInstructionFeatures:callback:":{"name":"-getRouteFrom:to:withWaypoints:andInstructionFeatures:callback:","abstract":"<p>Calculates a route from a certain point to a certain point with specific instruction features.</p>","parent_name":"MovinRoutingManager"},"Classes/MovinRoutingManager.html#/c:objc(cs)MovinRoutingManager(im)getRouteFrom:to:withWaypoints:andInstructionFeatures:andAccessibilityMode:callback:":{"name":"-getRouteFrom:to:withWaypoints:andInstructionFeatures:andAccessibilityMode:callback:","abstract":"<p>Calculates a route from a certain point to a certain point with specific instruction features.</p>","parent_name":"MovinRoutingManager"},"Enums/MovinRouteInstructionIndicator.html#/c:@E@MovinRouteInstructionIndicator@MovinRouteInstructionIndicatorNone":{"name":"MovinRouteInstructionIndicatorNone","abstract":"<p>No indicator available.</p>","parent_name":"MovinRouteInstructionIndicator"},"Enums/MovinRouteInstructionIndicator.html#/c:@E@MovinRouteInstructionIndicator@MovinRouteInstructionIndicatorElevatorUp":{"name":"MovinRouteInstructionIndicatorElevatorUp","abstract":"<p>Take an elevator up.</p>","parent_name":"MovinRouteInstructionIndicator"},"Enums/MovinRouteInstructionIndicator.html#/c:@E@MovinRouteInstructionIndicator@MovinRouteInstructionIndicatorElevatorDown":{"name":"MovinRouteInstructionIndicatorElevatorDown","abstract":"<p>Take an elevator down.</p>","parent_name":"MovinRouteInstructionIndicator"},"Enums/MovinRouteInstructionIndicator.html#/c:@E@MovinRouteInstructionIndicator@MovinRouteInstructionIndicatorStairsUp":{"name":"MovinRouteInstructionIndicatorStairsUp","abstract":"<p>Take stairs up.</p>","parent_name":"MovinRouteInstructionIndicator"},"Enums/MovinRouteInstructionIndicator.html#/c:@E@MovinRouteInstructionIndicator@MovinRouteInstructionIndicatorStairsDown":{"name":"MovinRouteInstructionIndicatorStairsDown","abstract":"<p>Take stairs down.</p>","parent_name":"MovinRouteInstructionIndicator"},"Enums/MovinRouteInstructionIndicator.html#/c:@E@MovinRouteInstructionIndicator@MovinRouteInstructionIndicatorGoTo":{"name":"MovinRouteInstructionIndicatorGoTo","abstract":"<p>Walk to a certain location.</p>","parent_name":"MovinRouteInstructionIndicator"},"Classes/MovinRouteInstruction.html#/c:objc(cs)MovinRouteInstruction(py)type":{"name":"type","abstract":"<p>Gets the (feature) type of this instruction.</p>","parent_name":"MovinRouteInstruction"},"Classes/MovinRouteInstruction.html#/c:objc(cs)MovinRouteInstruction(py)indicator":{"name":"indicator","abstract":"<p>Gets the indicator type for this instruction.</p>","parent_name":"MovinRouteInstruction"},"Classes/MovinRouteInstruction.html#/c:objc(cs)MovinRouteInstruction(py)pathIndex":{"name":"pathIndex","abstract":"<p>Gets the index of the way point in the route&rsquo;s path this instruction refers to.</p>","parent_name":"MovinRouteInstruction"},"Classes/MovinRouteInstruction.html#/c:objc(cs)MovinRouteInstruction(py)text":{"name":"text","abstract":"<p>Gets a (translatable) textual representation of this instruction.</p>","parent_name":"MovinRouteInstruction"},"Classes/MovinRoute.html#/c:objc(cs)MovinRoute(py)path":{"name":"path","abstract":"<p>Gets the path (a list of way points) of this route.</p>","parent_name":"MovinRoute"},"Classes/MovinRoute.html#/c:objc(cs)MovinRoute(py)instructions":{"name":"instructions","abstract":"<p>Gets a set of human readable instructions of this route.</p>","parent_name":"MovinRoute"},"Classes/MovinRoute.html#/c:objc(cs)MovinRoute(py)distance":{"name":"distance","abstract":"<p>Gets the distance of this route in meters.</p>","parent_name":"MovinRoute"},"Classes/MovinRoute.html#/c:objc(cs)MovinRoute(im)snapToRoute:withThreshold:":{"name":"-snapToRoute:withThreshold:","abstract":"<p>Snaps a position to the path of this route.</p>","parent_name":"MovinRoute"},"Classes/MovinRoute.html#/c:objc(cs)MovinRoute(im)snapToRoute:withThreshold:andPathIndex:":{"name":"-snapToRoute:withThreshold:andPathIndex:","abstract":"<p>Snaps a position to the path of this route.</p>","parent_name":"MovinRoute"},"Classes/MovinNavigationNode.html#/c:objc(cs)MovinNavigationNode(py)map":{"name":"map","abstract":"<p>Gets the map this navigation node is a member of.</p>","parent_name":"MovinNavigationNode"},"Classes/MovinNavigationNode.html#/c:objc(cs)MovinNavigationNode(py)neighbors":{"name":"neighbors","abstract":"<p>Gets the neighboring navigation nodes.</p>","parent_name":"MovinNavigationNode"},"Classes/MovinNavigationNode.html":{"name":"MovinNavigationNode","abstract":"<p>Represents a node in a navigation grid.</p>"},"Classes/MovinRoute.html":{"name":"MovinRoute","abstract":"<p>Represents a set of route instructions.</p>"},"Classes/MovinRouteInstruction.html":{"name":"MovinRouteInstruction","abstract":"<p>Represents a single instruction in a route.</p>"},"Enums/MovinRouteInstructionIndicator.html":{"name":"MovinRouteInstructionIndicator","abstract":"<p>A list of route instruction indicators. These can be used to display specific icons for specific instructions.</p>"},"Classes/MovinRoutingManager.html":{"name":"MovinRoutingManager","abstract":"<p>Represents the manager for route calculations.</p>"},"Routing.html#/c:MovinMap.h@T@NavigationNodeCallback":{"name":"NavigationNodeCallback","abstract":"<p>Handler for getting a navigation node. The resulting navigation node and an error is supplied. If an error occurs,"},"Routing.html#/c:MovinMap.h@T@NavigationNodesCallback":{"name":"NavigationNodesCallback","abstract":"<p>Handler for getting navigation nodes. An array of the resulting navigation nodes and an error is supplied. If an"},"Routing.html#/c:MovinRoutingManager.h@T@RoutingCallback":{"name":"RoutingCallback","abstract":"<p>Handler for getting routes. The resulting route is supplied. If an error occurs, the route will be nil and an error is set.</p>"},"Routing.html#/c:@MovinRouteInstructionFeatureFloors":{"name":"MovinRouteInstructionFeatureFloors","abstract":"<p>Instruction feature for floor changers (<q>take elevator/stairs to X</q>).</p>"},"Routing.html#/c:@MovinRouteInstructionFeatureToDestinationRoom":{"name":"MovinRouteInstructionFeatureToDestinationRoom","abstract":"<p>Instruction feature for walking to destination room (<q>walk to room X</q>).</p>"},"Routing.html#/c:@MovinRouteInstructionFeatureToFloorChanger":{"name":"MovinRouteInstructionFeatureToFloorChanger","abstract":"<p>Instruction feature for walking to floor changers (<q>walk to staircase X/elevator Y</q>).</p>"},"Classes/MovinTranslatableString.html#/c:objc(cs)MovinTranslatableString(py)key":{"name":"key","abstract":"<p>Gets the key used for translating this string.</p>","parent_name":"MovinTranslatableString"},"Classes/MovinTranslatableString.html#/c:objc(cs)MovinTranslatableString(py)parameters":{"name":"parameters","abstract":"<p>Gets the parameters of this string.</p>","parent_name":"MovinTranslatableString"},"Classes/MovinTranslatableString.html#/c:objc(cs)MovinTranslatableString(py)translated":{"name":"translated","abstract":"<p>Gets the translated value for this string using the language set to the MovinI18N instance.</p>","parent_name":"MovinTranslatableString"},"Classes/MovinTranslatableString.html#/c:objc(cs)MovinTranslatableString(im)init":{"name":"-init","abstract":"<p>Use initWithKey:andParameters: instead.</p>","parent_name":"MovinTranslatableString"},"Classes/MovinTranslatableString.html#/c:objc(cs)MovinTranslatableString(im)initWithKey:andParameters:":{"name":"-initWithKey:andParameters:","abstract":"<p>Initializes a new MovinTranslatableString object with the specified key and parameters.</p>","parent_name":"MovinTranslatableString"},"Classes/MovinTranslatableString.html#/c:objc(cs)MovinTranslatableString(cm)string:withParameters:":{"name":"+string:withParameters:","abstract":"<p>Returns a MovinTranslatableString object with the specified key and parameters.</p>","parent_name":"MovinTranslatableString"},"Classes/MovinI18N.html#/c:objc(cs)MovinI18N(py)activeLanguage":{"name":"activeLanguage","abstract":"<p>Gets or sets the active language (e.g. en-US, en-us, en, nl-NL, nl-BE).</p>","parent_name":"MovinI18N"},"Classes/MovinI18N.html#/c:objc(cs)MovinI18N(im)translate:withParameters:":{"name":"-translate:withParameters:","abstract":"<p>Translates the specified key with the specified parameters.</p>","parent_name":"MovinI18N"},"Classes/MovinI18N.html#/c:objc(cs)MovinI18N(im)downloadRoutingTranslationsWithCallback:":{"name":"-downloadRoutingTranslationsWithCallback:","abstract":"<p>Downloads the routing instructions translations. Once the translations have been downloaded, or if the download","parent_name":"MovinI18N"},"Classes/MovinI18N.html#/c:objc(cs)MovinI18N(im)downloadTranslationsForMap:withCallback:":{"name":"-downloadTranslationsForMap:withCallback:","abstract":"<p>Downloads the translations for the specified map.Once the translations have been downloaded, or if the download","parent_name":"MovinI18N"},"Classes/MovinI18N.html":{"name":"MovinI18N","abstract":"<p>Represents the internationalization manager for routing and maps.</p>"},"Classes/MovinTranslatableString.html":{"name":"MovinTranslatableString","abstract":"<p>Represents a translatable string.</p>"},"Enums/MovinCompassOffset.html#/c:@E@MovinCompassOffset@MovinCompassOffsetNone":{"name":"MovinCompassOffsetNone","abstract":"<p>No compass offset.</p>","parent_name":"MovinCompassOffset"},"Enums/MovinCompassOffset.html#/c:@E@MovinCompassOffset@MovinCompassOffsetStatusBar":{"name":"MovinCompassOffsetStatusBar","abstract":"<p>An offset of the compass heading based on the orientation of the status bar UI.</p>","parent_name":"MovinCompassOffset"},"Enums/MovinCompassOffset.html#/c:@E@MovinCompassOffset@MovinCompassOffsetDevice":{"name":"MovinCompassOffsetDevice","abstract":"<p>An offset of the compass heading based on the orientation of the current device.</p>","parent_name":"MovinCompassOffset"},"Protocols/MovinSmoothCompassDelegate.html#/c:objc(pl)MovinSmoothCompassDelegate(im)smoothCompass:didUpdateHeading:":{"name":"-smoothCompass:didUpdateHeading:","abstract":"<p>Is called when the smooth canvas heading has been updated.</p>","parent_name":"MovinSmoothCompassDelegate"},"Classes/MovinSmoothCompass.html#/c:objc(cs)MovinSmoothCompass(py)updateInterval":{"name":"updateInterval","abstract":"<p>Gets or sets the interval at which the heading of the compass will be updated.</p>","parent_name":"MovinSmoothCompass"},"Classes/MovinSmoothCompass.html#/c:objc(cs)MovinSmoothCompass(py)delegate":{"name":"delegate","abstract":"<p>Gets or sets the delegate to which events will be broadcasted.</p>","parent_name":"MovinSmoothCompass"},"Classes/MovinSmoothCompass.html#/c:objc(cs)MovinSmoothCompass(py)offset":{"name":"offset","abstract":"<p>Gets or sets the offset at which this smooth canvas will operate.</p>","parent_name":"MovinSmoothCompass"},"Classes/MovinSmoothCompass.html#/c:objc(cs)MovinSmoothCompass(py)headingThreshold":{"name":"headingThreshold","abstract":"<p>Gets or sets the minimum heading offset of the compass for this instance to report a change.</p>","parent_name":"MovinSmoothCompass"},"Classes/MovinSmoothCompass.html#/c:objc(cs)MovinSmoothCompass(py)turnSpeed":{"name":"turnSpeed","abstract":"<p>Gets or sets the speed in degrees per second this instance will change its heading.</p>","parent_name":"MovinSmoothCompass"},"Classes/MovinSmoothCompass.html#/c:objc(cs)MovinSmoothCompass(py)maxTurnDuration":{"name":"maxTurnDuration","abstract":"<p>Gets or sets the maximum duration in seconds a turn may take.</p>","parent_name":"MovinSmoothCompass"},"Classes/MovinLocationManager.html#/c:objc(cs)MovinLocationManager(py)shouldDisplayHeadingCalibration":{"name":"shouldDisplayHeadingCalibration","abstract":"<p>Sets or gets the value that will be passed when the CLLocationManager asks to show heading calibration. Default value","parent_name":"MovinLocationManager"},"Classes/MovinLocationManager.html#/c:objc(cs)MovinLocationManager(cm)instance":{"name":"+instance","abstract":"<p>Returns the singleton instance of the MovinLocationManager.</p>","parent_name":"MovinLocationManager"},"Classes/MovinLocationManager.html#/c:objc(cs)MovinLocationManager(im)addDelegate:":{"name":"-addDelegate:","abstract":"<p>Adds a delegate to the MovinLocationManager.</p>","parent_name":"MovinLocationManager"},"Classes/MovinLocationManager.html#/c:objc(cs)MovinLocationManager(im)removeDelegate:":{"name":"-removeDelegate:","abstract":"<p>Removes a delegate from the MovinLocationManager.</p>","parent_name":"MovinLocationManager"},"Classes/MovinRangedBeacon.html#/c:objc(cs)MovinRangedBeacon(py)beacon":{"name":"beacon","abstract":"<p>Gets the associated MovinBeacon of this ranged beacon. Can be nil.</p>","parent_name":"MovinRangedBeacon"},"Classes/MovinRangedBeacon.html#/c:objc(cs)MovinRangedBeacon(py)distance":{"name":"distance","abstract":"<p>Gets the estimated distance in meters of the device to this beacon.</p>","parent_name":"MovinRangedBeacon"},"Classes/MovinRangedBeacon.html#/c:objc(cs)MovinRangedBeacon(py)rssi":{"name":"rssi","abstract":"<p>Gets the signal strength in dBm with which this beacon was measured.</p>","parent_name":"MovinRangedBeacon"},"Classes/MovinRangedBeacon.html#/c:objc(cs)MovinRangedBeacon(py)proximity":{"name":"proximity","abstract":"<p>Gets the CLProximity of this beacon, this is one of IMMEDIATE, NEAR, FAR or UNKNOWN.</p>","parent_name":"MovinRangedBeacon"},"Classes/MovinRangedBeacon.html#/c:objc(cs)MovinRangedBeacon(py)beaconIdentifier":{"name":"beaconIdentifier","abstract":"<p>Gets the beacon specific data, UUID, major and minor. Also accessible through the beacon property if that is not nil.</p>","parent_name":"MovinRangedBeacon"},"Protocols/MovinPositioningListener.html#/c:objc(pl)MovinPositioningListener(im)positioningEngine:didInitialize:error:":{"name":"-positioningEngine:didInitialize:error:","abstract":"<p>Optional method, called once the MovinPositioner finished initializing.</p>","parent_name":"MovinPositioningListener"},"Protocols/MovinPositioningListener.html#/c:objc(pl)MovinPositioningListener(im)positioningEngine:didUpdatePosition:":{"name":"-positioningEngine:didUpdatePosition:","abstract":"<p>Optional method, called when a new position is calculated.</p>","parent_name":"MovinPositioningListener"},"Protocols/MovinPositioningListener.html#/c:objc(pl)MovinPositioningListener(im)positioningEngineDidFindUnknownLocation:":{"name":"-positioningEngineDidFindUnknownLocation:","abstract":"<p>Optional method, called when the MovinPositioner can no longer determine your position, because you are no","parent_name":"MovinPositioningListener"},"Classes/MovinPositioningEngine.html#/c:objc(cs)MovinPositioningEngine(im)initialize":{"name":"-initialize","abstract":"<p>Initializes the MovinPositioningEngine, which will download the required positioning database if and will fallback to","parent_name":"MovinPositioningEngine"},"Classes/MovinPositioningEngine.html#/c:objc(cs)MovinPositioningEngine(im)getHeading":{"name":"-getHeading","abstract":"<p>Gets the heading the device is oriented at in radians based on True North.</p>","parent_name":"MovinPositioningEngine"},"Classes/MovinPositioningEngine.html#/c:objc(cs)MovinPositioningEngine(im)isInitialized":{"name":"-isInitialized","abstract":"<p>Returns whether or not the MovinPositioningEngine has yet been initialized.</p>","parent_name":"MovinPositioningEngine"},"Classes/MovinPositioner.html#/c:objc(cs)MovinPositioner(im)start":{"name":"-start","abstract":"<p>Starts the MovinPositioner.</p>","parent_name":"MovinPositioner"},"Classes/MovinPositioner.html#/c:objc(cs)MovinPositioner(im)stop":{"name":"-stop","abstract":"<p>Stops the MovinPositioner.</p>","parent_name":"MovinPositioner"},"Classes/MovinPositioner.html#/c:objc(cs)MovinPositioner(py)isStarted":{"name":"isStarted","abstract":"<p>Returns whether or not the MovinPositioner is started.</p>","parent_name":"MovinPositioner"},"Classes/MovinPositioner.html#/c:objc(cs)MovinPositioner(im)addPositioningListener:":{"name":"-addPositioningListener:","abstract":"<p>Adds a positioning listener.</p>","parent_name":"MovinPositioner"},"Classes/MovinPositioner.html#/c:objc(cs)MovinPositioner(im)removePositioningListener:":{"name":"-removePositioningListener:","abstract":"<p>Removes an earlier added positioning listener.</p>","parent_name":"MovinPositioner"},"Protocols/MovinBeaconScannerListener.html#/c:objc(pl)MovinBeaconScannerListener(im)beaconScanner:didEnterAreaWithUUID:":{"name":"-beaconScanner:didEnterAreaWithUUID:","abstract":"<p>Method is called when the user entered the area for the provided UUID. This method is only called when","parent_name":"MovinBeaconScannerListener"},"Protocols/MovinBeaconScannerListener.html#/c:objc(pl)MovinBeaconScannerListener(im)beaconScanner:didExitAreaWithUUID:":{"name":"-beaconScanner:didExitAreaWithUUID:","abstract":"<p>Method is called when the user exited the area for the provided UUID. This method is only called when","parent_name":"MovinBeaconScannerListener"},"Protocols/MovinBeaconScannerListener.html#/c:objc(pl)MovinBeaconScannerListener(im)beaconScanner:didChangeNearestBeacon:":{"name":"-beaconScanner:didChangeNearestBeacon:","abstract":"<p>Is called when the nearest beacon is changed or when the current nearest beacon is out of range.</p>","parent_name":"MovinBeaconScannerListener"},"Protocols/MovinBeaconScannerListener.html#/c:objc(pl)MovinBeaconScannerListener(im)beaconScanner:isValidNearestBeacon:":{"name":"-beaconScanner:isValidNearestBeacon:","abstract":"<p>When this method is implemented the onNearestBeaconChanged method only returns beacons that pass this method.</p>","parent_name":"MovinBeaconScannerListener"},"Protocols/MovinBeaconScannerListener.html#/c:objc(pl)MovinBeaconScannerListener(im)beaconScanner:didRangeBeacons:":{"name":"-beaconScanner:didRangeBeacons:","abstract":"<p>Is called when beacons are ranged.</p>","parent_name":"MovinBeaconScannerListener"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(py)isBackgroundEnabled":{"name":"isBackgroundEnabled","abstract":"<p>Gets or sets a value indicating whether background scanning enabled. To enable background scanning (ranging), Apple","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(im)addMap:":{"name":"-addMap:","abstract":"<p>Adds a map to the MovinBeaconScanner to scan for. The UUID&rsquo;s of the beacons in the map are necessary to start","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(im)addMap:withSuccessListener:":{"name":"-addMap:withSuccessListener:","abstract":"<p>Adds a map to the MovinBeaconScanner to scan for. The UUID&rsquo;s of the beacons in the map are necessary to start","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(im)removeMap:":{"name":"-removeMap:","abstract":"<p>Removes a map from the MovinBeaconScanner, the UUID&rsquo;s only found in this map will no longer be scanned for.","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(im)startWithListener:":{"name":"-startWithListener:","abstract":"<p>Starts the MovinBeaconScanner and calls the given listener. Only the first time this method is called the","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(im)stopWithListener:":{"name":"-stopWithListener:","abstract":"<p>Stops the MovinBeaconScanner for the given listener. Only when no more listeners remain this method will","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(im)addSilentListener:":{"name":"-addSilentListener:","abstract":"<p>Adds a silent listener which will be informed of its implemented events. Adding such a listener will not","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(im)removeSilentListener:":{"name":"-removeSilentListener:","abstract":"<p>Removes a silent listener. Removing such a listener will not affect whether or not the MovinBeaconScanner","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(im)setBackgroundEnabled:":{"name":"-setBackgroundEnabled:","abstract":"<p>DEPRECATED: Use isBackgroundEnabled instead.</p>","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html#/c:objc(cs)MovinBeaconScanner(im)getBackgroundEnabled":{"name":"-getBackgroundEnabled","abstract":"<p>DEPRECATED: Use isBackgroundEnabled instead.</p>","parent_name":"MovinBeaconScanner"},"Classes/MovinBeaconScanner.html":{"name":"MovinBeaconScanner","abstract":"<p>Represents a scanner for discovering nearby beacons.</p>"},"Protocols/MovinBeaconScannerListener.html":{"name":"MovinBeaconScannerListener","abstract":"<p>Defines methods that a listener of MovinBeaconScanner can optionally implement to use the results of a"},"Classes/MovinPositioner.html":{"name":"MovinPositioner","abstract":"<p>Represents an abstract base class for a position provider.</p>"},"Classes/MovinPositioningEngine.html":{"name":"MovinPositioningEngine","abstract":"<p>Represents an engine for determining the position of the device.</p>"},"Protocols/MovinPositioningListener.html":{"name":"MovinPositioningListener","abstract":"<p>Defines methods that a listener of MovinPositioner can optionally implement to use the results of a"},"Classes/MovinRangedBeacon.html":{"name":"MovinRangedBeacon","abstract":"<p>Represents a ranging result of a single beacon.</p>"},"Classes/MovinLocationManager.html":{"name":"MovinLocationManager","abstract":"<p>Represents a shared CLLocationManager instance.</p>"},"Classes/MovinSmoothCompass.html":{"name":"MovinSmoothCompass","abstract":"<p>Represents a compass which rotates smoothly.</p>"},"Protocols/MovinSmoothCompassDelegate.html":{"name":"MovinSmoothCompassDelegate","abstract":"<p>Defines methods that a delegate of MovinSmoothCompass must optionally implement to use the results of"},"Enums/MovinCompassOffset.html":{"name":"MovinCompassOffset","abstract":"<p>Contains the offsets at which the smooth compass can operate.</p>"},"Protocols/MovinFloorChangedListener.html#/c:objc(pl)MovinFloorChangedListener(im)tileProvider:didChangeFloor:":{"name":"-tileProvider:didChangeFloor:","abstract":"<p>Method called when the floor of the specified tile provider has changed.</p>","parent_name":"MovinFloorChangedListener"},"Classes/MovinTileProvider.html#/c:objc(cs)MovinTileProvider(py)style":{"name":"style","abstract":"<p>Gets the style of this tile provider.</p>","parent_name":"MovinTileProvider"},"Classes/MovinTileProvider.html#/c:objc(cs)MovinTileProvider(py)layer":{"name":"layer","abstract":"<p>Gets the layer of this tile provider.</p>","parent_name":"MovinTileProvider"},"Classes/MovinTileProvider.html#/c:objc(cs)MovinTileProvider(py)floor":{"name":"floor","abstract":"<p>Gets or sets the floor the tile provider is currently providing tiles for.</p>","parent_name":"MovinTileProvider"},"Classes/MovinTileProvider.html#/c:objc(cs)MovinTileProvider(py)followFloor":{"name":"followFloor","abstract":"<p>Gets or sets whether this tile provider will follow the floor the device is currently located at.</p>","parent_name":"MovinTileProvider"},"Classes/MovinTileProvider.html#/c:objc(cs)MovinTileProvider(im)addFloorChangedListener:":{"name":"-addFloorChangedListener:","abstract":"<p>Adds the specified floor changed listener to this instance. Once the active floor has changed, the","parent_name":"MovinTileProvider"},"Classes/MovinTileProvider.html#/c:objc(cs)MovinTileProvider(im)removeFloorChangedListener:":{"name":"-removeFloorChangedListener:","abstract":"<p>Removes the specified floor changed listener from this instance.</p>","parent_name":"MovinTileProvider"},"Classes/MovinTileProvider.html#/c:objc(cs)MovinTileProvider(im)getTileWithX:andY:andZ:andCallback:":{"name":"-getTileWithX:andY:andZ:andCallback:","abstract":"<p>Gets the tile at the specified x, y and zoom. Once the tile has been loaded, the specified callback will","parent_name":"MovinTileProvider"},"Classes/MovinTileManifest.html#/c:objc(cs)MovinTileManifest(py)version":{"name":"version","abstract":"<p>Gets the version number of the latest tile package.</p>","parent_name":"MovinTileManifest"},"Classes/MovinTileManifest.html#/c:objc(cs)MovinTileManifest(py)map":{"name":"map","abstract":"<p>Gets the map of which this tile manifest represents the tiles.</p>","parent_name":"MovinTileManifest"},"Classes/MovinTileManifest.html#/c:objc(cs)MovinTileManifest(py)layers":{"name":"layers","abstract":"<p>Gets the available map layers for the map tiles.</p>","parent_name":"MovinTileManifest"},"Classes/MovinTileManifest.html#/c:objc(cs)MovinTileManifest(py)styles":{"name":"styles","abstract":"<p>Gets the available map styles for the map tiles.</p>","parent_name":"MovinTileManifest"},"Classes/MovinTileManifest.html#/c:objc(cs)MovinTileManifest(py)defaultLayer":{"name":"defaultLayer","abstract":"<p>Gets the default layer.</p>","parent_name":"MovinTileManifest"},"Classes/MovinTileManifest.html#/c:objc(cs)MovinTileManifest(py)defaultStyle":{"name":"defaultStyle","abstract":"<p>Gets the default style.</p>","parent_name":"MovinTileManifest"},"Classes/MovinTileManifest.html":{"name":"MovinTileManifest","abstract":"<p>Represents the tile manifest.</p>"},"Maps.html#/c:MovinMap.h@T@TileManifestCallback":{"name":"TileManifestCallback","abstract":"<p>Handler for getting a tile manifest. The resulting tile manifest and an error is supplied. If an error occurs, the"},"Classes/MovinTileProvider.html":{"name":"MovinTileProvider","abstract":"<p>Provides tile images.</p>"},"Protocols/MovinFloorChangedListener.html":{"name":"MovinFloorChangedListener","abstract":"<p>Defines methods that a listener of MovinTileProvider would need to implement to listen to floor changes.</p>"},"Enums/MovinService.html#/c:@E@MovinService@MovinServiceUndefined":{"name":"MovinServiceUndefined","abstract":"<p>No specific service.</p>","parent_name":"MovinService"},"Enums/MovinService.html#/c:@E@MovinService@MovinServicePositioning":{"name":"MovinServicePositioning","abstract":"<p>Positioning service.</p>","parent_name":"MovinService"},"Enums/MovinService.html#/c:@E@MovinService@MovinServiceTurnByTurn":{"name":"MovinServiceTurnByTurn","abstract":"<p>(DEPRECATED) Turn by turn service.</p>","parent_name":"MovinService"},"Enums/MovinService.html#/c:@E@MovinService@MovinServiceProximity":{"name":"MovinServiceProximity","abstract":"<p>(DEPRECATED) Proximity service.</p>","parent_name":"MovinService"},"Enums/MovinService.html#/c:@E@MovinService@MovinServiceTrigger":{"name":"MovinServiceTrigger","abstract":"<p>(DEPRECATED) Trigger service.</p>","parent_name":"MovinService"},"Enums/MovinService.html#/c:@E@MovinService@MovinServiceRouting":{"name":"MovinServiceRouting","abstract":"<p>Routing service.</p>","parent_name":"MovinService"},"Enums/MovinService.html#/c:@E@MovinService@MovinServiceData":{"name":"MovinServiceData","abstract":"<p>Data services.</p>","parent_name":"MovinService"},"Enums/MovinCacheableData.html#/c:@E@MovinCacheableData@MovinCacheableDataPositioning":{"name":"MovinCacheableDataPositioning","abstract":"<p>Data used by the MovinPositioningEngine.</p>","parent_name":"MovinCacheableData"},"Enums/MovinCacheableData.html#/c:@E@MovinCacheableData@MovinCacheableDataMapData":{"name":"MovinCacheableDataMapData","abstract":"<p>Data provided by MovinMap, such as buildings and entities.</p>","parent_name":"MovinCacheableData"},"Enums/MovinCacheableData.html#/c:@E@MovinCacheableData@MovinCacheableDataTiles":{"name":"MovinCacheableDataTiles","abstract":"<p>Tiles provided by the MovinTileProvider.</p>","parent_name":"MovinCacheableData"},"Enums/MovinCacheableData.html#/c:@E@MovinCacheableData@MovinCacheableDataImages":{"name":"MovinCacheableDataImages","abstract":"<p>Images provided by the MovinImageProvider.</p>","parent_name":"MovinCacheableData"},"Enums/MovinCacheableData.html#/c:@E@MovinCacheableData@MovinCacheableDataRouting":{"name":"MovinCacheableDataRouting","abstract":"<p>(RESERVED) Data used by the routing system.</p>","parent_name":"MovinCacheableData"},"Enums/MovinCacheableData.html#/c:@E@MovinCacheableData@MovinCacheableDataBeacons":{"name":"MovinCacheableDataBeacons","abstract":"<p>Beacon data provided by MovinMap and used by MovinBeaconScanner.</p>","parent_name":"MovinCacheableData"},"Enums/MovinCacheableData.html#/c:@E@MovinCacheableData@MovinCacheableDataTranslations":{"name":"MovinCacheableDataTranslations","abstract":"<p>Translation information.</p>","parent_name":"MovinCacheableData"},"Enums/MovinCacheableData.html#/c:@E@MovinCacheableData@MovinCacheableDataAll":{"name":"MovinCacheableDataAll","abstract":"<p>All cacheable data types.</p>","parent_name":"MovinCacheableData"},"Classes/MovinFlooredFeatureObject.html#/c:objc(cs)MovinFlooredFeatureObject(py)floor":{"name":"floor","abstract":"<p>Gets the floor number of this instance.</p>","parent_name":"MovinFlooredFeatureObject"},"Classes/MovinPositionedDataObject.html#/c:objc(cs)MovinPositionedDataObject(py)position":{"name":"position","abstract":"<p>Gets the position of this instance.</p>","parent_name":"MovinPositionedDataObject"},"Classes/MovinFeatureObject.html#/c:objc(cs)MovinFeatureObject(py)geometry":{"name":"geometry","abstract":"<p>Gets the geometric shape of this instance.</p>","parent_name":"MovinFeatureObject"},"Classes/MovinDataObject.html#/c:objc(cs)MovinDataObject(py)id":{"name":"id","abstract":"<p>Gets the identifier of this instance.</p>","parent_name":"MovinDataObject"},"Classes/MovinDataObject.html#/c:objc(cs)MovinDataObject(py)name":{"name":"name","abstract":"<p>Gets the name of this instance.</p>","parent_name":"MovinDataObject"},"Classes/MovinDataObject.html#/c:objc(cs)MovinDataObject(py)properties":{"name":"properties","abstract":"<p>Gets a collection of properties of this instance.</p>","parent_name":"MovinDataObject"},"Classes/MovinDataObject.html#/c:objc(cs)MovinDataObject(im)setCacheableImageExtractorForKey:andCallback:":{"name":"-setCacheableImageExtractorForKey:andCallback:","abstract":"<p>Sets a callback which can be invoked to determine which image files should be downloaded and cached for the","parent_name":"MovinDataObject"},"Classes/MovinScaledPOIUrl.html#/c:objc(cs)MovinScaledPOIUrl(py)scale":{"name":"scale","abstract":"<p>Gets the scale of the POI image which can be found at the URL.</p>","parent_name":"MovinScaledPOIUrl"},"Classes/MovinScaledPOIUrl.html#/c:objc(cs)MovinScaledPOIUrl(py)url":{"name":"url","abstract":"<p>Gets the URL of of the POI image.</p>","parent_name":"MovinScaledPOIUrl"},"Classes/MovinScaledPOIUrl.html#/c:objc(cs)MovinScaledPOIUrl(im)getImage:":{"name":"-getImage:","abstract":"<p>Gets the image this MovinScaledPOIUrl represents.</p>","parent_name":"MovinScaledPOIUrl"},"Classes/MovinImagePoint.html#/c:objc(cs)MovinImagePoint(py)x":{"name":"x","abstract":"<p>Gets the X-coordinate of this point.</p>","parent_name":"MovinImagePoint"},"Classes/MovinImagePoint.html#/c:objc(cs)MovinImagePoint(py)y":{"name":"y","abstract":"<p>Gets the Y-coordinate of this point.</p>","parent_name":"MovinImagePoint"},"Classes/MovinImagePoint.html#/c:objc(cs)MovinImagePoint(py)CGPoint":{"name":"CGPoint","abstract":"<p>Gets a CGPoint object representing the same value as this point.</p>","parent_name":"MovinImagePoint"},"Classes/MovinImagePoint.html#/c:objc(cs)MovinImagePoint(im)init":{"name":"-init","abstract":"<p>Use initWithX:andY: instead.</p>","parent_name":"MovinImagePoint"},"Classes/MovinImagePoint.html#/c:objc(cs)MovinImagePoint(im)initWithX:andY:":{"name":"-initWithX:andY:","abstract":"<p>Initializes a new MovinImagePoint object with the specified x and y coordinates.</p>","parent_name":"MovinImagePoint"},"Classes/MovinImagePoint.html#/c:objc(cs)MovinImagePoint(cm)fromJson:":{"name":"+fromJson:","abstract":"<p>Parses the specified data into an instance of MovinImagePoint.</p>","parent_name":"MovinImagePoint"},"Classes/MovinMapZoomLevel.html#/c:objc(cs)MovinMapZoomLevel(py)rowMin":{"name":"rowMin","abstract":"<p>Gets the minimum tile row number for this zoom level.</p>","parent_name":"MovinMapZoomLevel"},"Classes/MovinMapZoomLevel.html#/c:objc(cs)MovinMapZoomLevel(py)rowMax":{"name":"rowMax","abstract":"<p>Gets the maximum tile row number for this zoom level.</p>","parent_name":"MovinMapZoomLevel"},"Classes/MovinMapZoomLevel.html#/c:objc(cs)MovinMapZoomLevel(py)columnMin":{"name":"columnMin","abstract":"<p>Gets the minimum tile column number for this zoom level.</p>","parent_name":"MovinMapZoomLevel"},"Classes/MovinMapZoomLevel.html#/c:objc(cs)MovinMapZoomLevel(py)columnMax":{"name":"columnMax","abstract":"<p>Gets the maximum tile column number for this zoom level.</p>","parent_name":"MovinMapZoomLevel"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)descriptionText":{"name":"descriptionText","abstract":"<p>Gets the description of this map.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)lowestFloorNumber":{"name":"lowestFloorNumber","abstract":"<p>Gets the lowest floor number of this map.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)highestFloorNumber":{"name":"highestFloorNumber","abstract":"<p>Gets the highest floor number of this map.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)subTypes":{"name":"subTypes","abstract":"<p>Gets a dictionary filled with the sub types available in this map.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)isDownloadingMapData":{"name":"isDownloadingMapData","abstract":"<p>Gets a value indicating whether the map is currently downloading map data.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)isDownloadingBeaconData":{"name":"isDownloadingBeaconData","abstract":"<p>Gets a value indicating whether the map is currently downloading beacon data.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)isDownloadingTileManifest":{"name":"isDownloadingTileManifest","abstract":"<p>Gets a value indicating whether the map is currently downloading the tile manifest.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)isDownloadingNavigationNodes":{"name":"isDownloadingNavigationNodes","abstract":"<p>Gets a value indicating whether the mis currently downloading the navigation nodes.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)beacons":{"name":"beacons","abstract":"<p>Gets all beacons available in this map. Returns nil if the beacon data has not yet been downloaded. Use","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)entities":{"name":"entities","abstract":"<p>Gets all entities available in this map. Returns nil if the map data has not yet been downloaded. Use","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)buildings":{"name":"buildings","abstract":"<p>Gets all buildings available in this map. Returns nil if the map data has not yet been downloaded. Use","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)navigationNodes":{"name":"navigationNodes","abstract":"<p>Gets all navigation nodes available in this map. Returns nil if the navigation nodes have not yet been downloaded.","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)floors":{"name":"floors","abstract":"<p>Gets all floors available in this map.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(py)tileManifest":{"name":"tileManifest","abstract":"<p>Gets the tile manifest for this map. Returns nil if the tile manifest has not yet been downloaded. Use","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getPositioningEngine:":{"name":"-getPositioningEngine:","abstract":"<p>Attempts to create a positioning engine. If it succeeds, a MovinPositioningEngine is returned, otherwise","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)downloadBeaconDataWithCallback:":{"name":"-downloadBeaconDataWithCallback:","abstract":"<p>Attempts to download the beacon data. After downloading the data the callback, if present, will be invoked.","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)downloadMapDataWithCallback:":{"name":"-downloadMapDataWithCallback:","abstract":"<p>Attempts to download the map data. After downloading the data, the callback, if present, will be invoked.","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)downloadTileManifestWithCallback:":{"name":"-downloadTileManifestWithCallback:","abstract":"<p>Attempts to download the tile manifest. After downloading the file, the callback, if present, will be","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)downloadNavigationNodesWithCallback:":{"name":"-downloadNavigationNodesWithCallback:","abstract":"<p>Attempts to download the navigation nodes. After downloading the nodes, the callback, if present, will be invoked.","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)downloadImageData":{"name":"-downloadImageData","abstract":"<p>Caches all image data associated with the sub types, map data and beacons.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBeaconsWithCallback:":{"name":"-getBeaconsWithCallback:","abstract":"<p>Gets all beacons available in this map. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBeaconGroupsWithCallback:":{"name":"-getBeaconGroupsWithCallback:","abstract":"<p>DEPRECATED: Use getBeaconsWithCallback: instead.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBeaconsInShape:andFloor:andCallback:":{"name":"-getBeaconsInShape:andFloor:andCallback:","abstract":"<p>Gets all beacons in this map within the specified shape and floor. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBeaconsInShape:andFloor:":{"name":"-getBeaconsInShape:andFloor:","abstract":"<p>Gets all beacons in this map within the specified shape and floor. If the beacon data has not yet been downloaded,","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBeaconNearestToPoint:atFloor:withCallback:":{"name":"-getBeaconNearestToPoint:atFloor:withCallback:","abstract":"<p>Gets the beacon nearest to the specified point on the specified floor. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBeaconNearestToPoint:atFloor:":{"name":"-getBeaconNearestToPoint:atFloor:","abstract":"<p>Gets the beacon nearest to the specified point on the specified floor. If the beacon data has not yet been","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBeaconNearestToPoint:withCallback:":{"name":"-getBeaconNearestToPoint:withCallback:","abstract":"<p>Gets the beacon nearest to the specified point. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBeaconNearestToPoint:":{"name":"-getBeaconNearestToPoint:","abstract":"<p>Gets the beacon nearest to the specified point. If the beacon data has not yet been downloaded, nil is returned.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getEntitiesWithCallback:":{"name":"-getEntitiesWithCallback:","abstract":"<p>Gets all entities available in this map. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getEntitiesInShape:andFloor:andCallback:":{"name":"-getEntitiesInShape:andFloor:andCallback:","abstract":"<p>Gets all entities in this map within the specified shape and floor. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getEntitiesInShape:andFloor:":{"name":"-getEntitiesInShape:andFloor:","abstract":"<p>Gets all entities in this map within the specified shape and floor. If the map data has not yet been","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBuildingsWithCallback:":{"name":"-getBuildingsWithCallback:","abstract":"<p>Gets all buildings available in this map. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBuildingsInShape:andCallback:":{"name":"-getBuildingsInShape:andCallback:","abstract":"<p>Gets all buildings in this map within the specified shape. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getBuildingsInShape:":{"name":"-getBuildingsInShape:","abstract":"<p>Gets all buildings in this map within the specified shape . If the map data has not yet been","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getNavigationNodesWithCallback:":{"name":"-getNavigationNodesWithCallback:","abstract":"<p>Gets all navigation nodes available in this map. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getNavigationNodesInShape:andFloor:andCallback:":{"name":"-getNavigationNodesInShape:andFloor:andCallback:","abstract":"<p>Gets all navigation nodes in this map within the specified shape and floor. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getNavigationNodesInShape:andFloor:":{"name":"-getNavigationNodesInShape:andFloor:","abstract":"<p>Gets all navigation nodes in this map within the specified shape and floor. If the map data has not yet been","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getNavigationNodeNearestToPoint:atFloor:withCallback:":{"name":"-getNavigationNodeNearestToPoint:atFloor:withCallback:","abstract":"<p>Gets the navigation node nearest to the specified point on the specified floor. The result is returned using a","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getNavigationNodeNearestToPoint:withCallback:":{"name":"-getNavigationNodeNearestToPoint:withCallback:","abstract":"<p>Gets the navigation node nearest to the specified point. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getNavigationNodeNearestToPoint:":{"name":"-getNavigationNodeNearestToPoint:","abstract":"<p>Gets the navigation node nearest to the specified point. If the map data has not yet been downloaded, nil is","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getNavigationNodeNearestToPoint:atFloor:":{"name":"-getNavigationNodeNearestToPoint:atFloor:","abstract":"<p>Gets the navigation node nearest to the specified point on the specified floor. If the map data has not yet been","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getTileManifestWithCallback:":{"name":"-getTileManifestWithCallback:","abstract":"<p>Gets the tile manifest for this map. The result is returned using a callback.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getRouter:":{"name":"-getRouter:","abstract":"<p>Gets the Movin routing manager for this map.</p>","parent_name":"MovinMap"},"Classes/MovinMap.html#/c:objc(cs)MovinMap(im)getFloor:":{"name":"-getFloor:","abstract":"<p>Gets the floor associated with the specified floor number.</p>","parent_name":"MovinMap"},"Classes/MovinFontFamily.html#/c:objc(cs)MovinFontFamily(py)url":{"name":"url","abstract":"<p>Gets the URL of the font.</p>","parent_name":"MovinFontFamily"},"Classes/MovinFontFamily.html#/c:objc(cs)MovinFontFamily(im)getFont:":{"name":"-getFont:","abstract":"<p>Returns the UIFont instance which this font family represents.</p>","parent_name":"MovinFontFamily"},"Classes/MovinFloor.html#/c:objc(cs)MovinFloor(py)floorNumber":{"name":"floorNumber","abstract":"<p>Gets the numeric representation of this floor.</p>","parent_name":"MovinFloor"},"Classes/MovinFloor.html#/c:objc(cs)MovinFloor(py)abbreviatedName":{"name":"abbreviatedName","abstract":"<p>Gets the translation key for the abbreviation of this floor.</p>","parent_name":"MovinFloor"},"Classes/MovinFloor.html#/c:objc(cs)MovinFloor(py)name":{"name":"name","abstract":"<p>Gets the translation key for the name of this floor.</p>","parent_name":"MovinFloor"},"Classes/MovinFloor.html#/c:objc(cs)MovinFloor(py)articledName":{"name":"articledName","abstract":"<p>Gets the translation key for the articled name of this floor.</p>","parent_name":"MovinFloor"},"Classes/MovinFloor.html#/c:objc(cs)MovinFloor(py)abbreviatedNameTranslated":{"name":"abbreviatedNameTranslated","abstract":"<p>Gets the translated abbreviation of this floor.</p>","parent_name":"MovinFloor"},"Classes/MovinFloor.html#/c:objc(cs)MovinFloor(py)nameTranslated":{"name":"nameTranslated","abstract":"<p>Gets the translated name of this floor.</p>","parent_name":"MovinFloor"},"Classes/MovinFloor.html#/c:objc(cs)MovinFloor(py)articledNameTranslated":{"name":"articledNameTranslated","abstract":"<p>Gets the translated articled name of this floor.</p>","parent_name":"MovinFloor"},"Classes/MovinEntitySubType.html#/c:objc(cs)MovinEntitySubType(py)baseType":{"name":"baseType","abstract":"<p>Gets the base type of this sub type.</p>","parent_name":"MovinEntitySubType"},"Classes/MovinEntitySubType.html#/c:objc(cs)MovinEntitySubType(py)descriptionText":{"name":"descriptionText","abstract":"<p>Gets the description of this sub type.</p>","parent_name":"MovinEntitySubType"},"Classes/MovinEntitySubType.html#/c:objc(cs)MovinEntitySubType(py)poiUrl":{"name":"poiUrl","abstract":"<p>Gets the point of interest image URL of this sub type.</p>","parent_name":"MovinEntitySubType"},"Classes/MovinEntitySubType.html#/c:objc(cs)MovinEntitySubType(py)poiAnchor":{"name":"poiAnchor","abstract":"<p>Gets the anchor location of the point of interest image specified in poiUrl. The x and y values range between 0.0 and 1.0.</p>","parent_name":"MovinEntitySubType"},"Classes/MovinEntitySubType.html#/c:objc(cs)MovinEntitySubType(py)poiSize":{"name":"poiSize","abstract":"<p>Gets the size of the point of interest image specified in poiUrl.</p>","parent_name":"MovinEntitySubType"},"Classes/MovinEntitySubType.html#/c:objc(cs)MovinEntitySubType(py)hasScaledPois":{"name":"hasScaledPois","abstract":"<p>Gets a value indicating whether this sub type has scaled POI values.</p>","parent_name":"MovinEntitySubType"},"Classes/MovinEntitySubType.html#/c:objc(cs)MovinEntitySubType(py)scaledPoiUrls":{"name":"scaledPoiUrls","abstract":"<p>Gets the URLs of the scaled POI images.</p>","parent_name":"MovinEntitySubType"},"Classes/MovinEntitySubType.html#/c:objc(cs)MovinEntitySubType(im)getPoiImage:":{"name":"-getPoiImage:","abstract":"<p>Returns the POI image of this sub type.</p>","parent_name":"MovinEntitySubType"},"Classes/MovinEntity.html#/c:objc(cs)MovinEntity(py)building":{"name":"building","abstract":"<p>Gets the building this instance is a member of.</p>","parent_name":"MovinEntity"},"Classes/MovinEntity.html#/c:objc(cs)MovinEntity(py)subType":{"name":"subType","abstract":"<p>Gets the sub type of this instance.</p>","parent_name":"MovinEntity"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(py)allowCaching":{"name":"allowCaching","abstract":"<p>Gets a value indicating whether caching is allowed according to this caching protocol.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(py)allowSyncing":{"name":"allowSyncing","abstract":"<p>Gets a value indicating whether the cache should be synced after it has been downloaded for the first time.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(py)refreshRate":{"name":"refreshRate","abstract":"<p>Gets the refresh rate of the cache. After the interval specified by this refresh rate the cache","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(py)forcedRefreshRate":{"name":"forcedRefreshRate","abstract":"<p>Gets the forced refresh of the cache. If the interval specified by refreshRate has passed but","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(py)timeoutWithAvailableCache":{"name":"timeoutWithAvailableCache","abstract":"<p>Gets the timeout interval for requests sent out while an expired cached version of the response is available.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(py)timeout":{"name":"timeout","abstract":"<p>Gets the timeout interval for request sent out while no cached version of the response is available.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)initWithAllowCaching:andAllowSyncing:andRefreshRate:andForcedRefreshRate:andtimeoutWithAvailableCache:andTimeout:":{"name":"-initWithAllowCaching:andAllowSyncing:andRefreshRate:andForcedRefreshRate:andtimeoutWithAvailableCache:andTimeout:","abstract":"<p>Initializes a new MovinCacheProtocol object with the specified caching options.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(cm)standard":{"name":"+standard","abstract":"<p>A default cache protocol. This protocol allows caching and does not limit syncing to Wi-Fi. The","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(cm)doNotCache":{"name":"+doNotCache","abstract":"<p>A do-not-cache cache protocol. This protocol does not allow any caching to occur. The timeout is set to","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)withAllowCaching:":{"name":"-withAllowCaching:","abstract":"<p>Returns a copy of this instance with allowCaching set to the specified value.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)withAllowSyncing:":{"name":"-withAllowSyncing:","abstract":"<p>Returns a copy of this instance with allowSyncing set to the specified value.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)withRefreshRate:":{"name":"-withRefreshRate:","abstract":"<p>Returns a copy of this instance with refreshRate set to the specified value.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)withForcedRefreshRate:":{"name":"-withForcedRefreshRate:","abstract":"<p>Returns a copy of this instance with forcedRefreshRate set to the specified value.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)withTimeout:":{"name":"-withTimeout:","abstract":"<p>Returns a copy of this instance with timeout set to the specified value.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)withTimeoutWithAvailableCache:":{"name":"-withTimeoutWithAvailableCache:","abstract":"<p>Returns a copy of this instance with timeoutWithAvailableCache set to the specified value.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)shouldReadFromCache:":{"name":"-shouldReadFromCache:","abstract":"<p>Returns a value indicating whether the cache should be synced based on the specified time since last synchronization.</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)initWithCoder:":{"name":"-initWithCoder:","abstract":"<p>Undocumented</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinCacheProtocol.html#/c:objc(cs)MovinCacheProtocol(im)encodeWithCoder:":{"name":"-encodeWithCoder:","abstract":"<p>Undocumented</p>","parent_name":"MovinCacheProtocol"},"Classes/MovinBuilding.html#/c:objc(cs)MovinBuilding(py)descriptionText":{"name":"descriptionText","abstract":"<p>Gets the description of this building.</p>","parent_name":"MovinBuilding"},"Classes/MovinBuilding.html#/c:objc(cs)MovinBuilding(py)entities":{"name":"entities","abstract":"<p>Gets the entities located within this building.</p>","parent_name":"MovinBuilding"},"Classes/MovinBuilding.html#/c:objc(cs)MovinBuilding(py)map":{"name":"map","abstract":"<p>Gets the map this instance is a member of.</p>","parent_name":"MovinBuilding"},"Classes/MovinBeaconGroup.html#/c:objc(cs)MovinBeaconGroup(py)beacons":{"name":"beacons","abstract":"<p>Gets the beacons associated with this instance.</p>","parent_name":"MovinBeaconGroup"},"Classes/MovinBeaconGroup.html#/c:objc(cs)MovinBeaconGroup(py)map":{"name":"map","abstract":"<p>Gets the map associated with this instance.</p>","parent_name":"MovinBeaconGroup"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)referenceId":{"name":"referenceId","abstract":"<p>Gets the reference id of this instance.</p>","parent_name":"MovinBeacon"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)group":{"name":"group","abstract":"<p>Gets the group this instance is a member of.</p>","parent_name":"MovinBeacon"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)map":{"name":"map","abstract":"<p>Gets the map this instance is a member of.</p>","parent_name":"MovinBeacon"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)beaconCode":{"name":"beaconCode","abstract":"<p>Gets the beacon code of this instance.</p>","parent_name":"MovinBeacon"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)identifier":{"name":"identifier","abstract":"<p>Gets the UUID, major and minor of this instance.</p>","parent_name":"MovinBeacon"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)status":{"name":"status","abstract":"<p>Gets the status of this instance.</p>","parent_name":"MovinBeacon"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)type":{"name":"type","abstract":"<p>Gets the type of this instance.</p>","parent_name":"MovinBeacon"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)shuffled":{"name":"shuffled","abstract":"<p>Gets a value indicating whether or not the beacon&rsquo;s UUID, major and minor are shuffled.</p>","parent_name":"MovinBeacon"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)shuffledIds":{"name":"shuffledIds","abstract":"<p>Gets the beacon identifiers that this beacon has broadcasted, is broadcasting and/or will broadcast in the future.</p>","parent_name":"MovinBeacon"},"Classes/MovinBeacon.html#/c:objc(cs)MovinBeacon(py)secureUuid":{"name":"secureUuid","abstract":"<p>The ProximityUUID with which this beacon will broadcast if secure suffling is turned on.</p>","parent_name":"MovinBeacon"},"Classes/FloorPosition.html#/c:objc(cs)FloorPosition(py)position":{"name":"position","abstract":"<p>The geographical position.</p>","parent_name":"FloorPosition"},"Classes/FloorPosition.html#/c:objc(cs)FloorPosition(py)floor":{"name":"floor","abstract":"<p>The floor the position is on.</p>","parent_name":"FloorPosition"},"Classes/FloorPosition.html#/c:objc(cs)FloorPosition(im)initWithGeoLatLng:andFloor:":{"name":"-initWithGeoLatLng:andFloor:","abstract":"<p>Initializes a new FloorPosition for the given position and floor.</p>","parent_name":"FloorPosition"},"Classes/FloorPosition.html#/c:objc(cs)FloorPosition(cm)positionWithPoint:andFloor:":{"name":"+positionWithPoint:andFloor:","abstract":"<p>Initializes a new FloorPosition for the given position and floor.</p>","parent_name":"FloorPosition"},"Classes/FloorPosition.html#/c:objc(cs)FloorPosition(im)toJSON":{"name":"-toJSON","abstract":"<p>Returns a JSON representation of this FloorPosition.</p>","parent_name":"FloorPosition"},"Classes/FloorPosition.html#/c:objc(cs)FloorPosition(im)isEqualToPosition:":{"name":"-isEqualToPosition:","abstract":"<p>Returns a value indicating whether this instance and the specified FloorPosition are equal.</p>","parent_name":"FloorPosition"},"Classes/FloorPosition.html#/c:objc(cs)FloorPosition(cm)fromJson:":{"name":"+fromJson:","abstract":"<p>Creates a FloorPosition instance from the given JSON data.</p>","parent_name":"FloorPosition"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(im)initWithUUID:":{"name":"-initWithUUID:","abstract":"<p>Initializes a BeaconIdentifier with only an UUID, which will compare to all Beacons with the same UUID, regardless","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(im)initWithUUID:andMajor:":{"name":"-initWithUUID:andMajor:","abstract":"<p>Initializes the BeaconIdentifier with an UUID and major, which will compare to all Beacons with the same UUID and","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(im)initWithUUID:andMajor:andMinor:":{"name":"-initWithUUID:andMajor:andMinor:","abstract":"<p>Initializes the BeaconIdentifier with an UUID, major and minor, which will only compare to Beacons with the same","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(im)initWithBeacon:":{"name":"-initWithBeacon:","abstract":"<p>Initializes the BeaconIdentifier with the contents of a CLBeacon provided by the CoreLocation framework. A","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(im)toJSON":{"name":"-toJSON","abstract":"<p>Creates a JSON representation of this BeaconIdentifier.</p>","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(cm)fromJson:":{"name":"+fromJson:","abstract":"<p>Creates a BeaconIdentifier from the given JSON data.</p>","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(im)compare:":{"name":"-compare:","abstract":"<p>Compares the given CLBeacon to this BeaconIdentifier. Based on how the BeaconIdentifier is initialized a certain","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(py)uuid":{"name":"uuid","abstract":"<p>Gets the UUID of the BeaconIdentifier.</p>","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(py)major":{"name":"major","abstract":"<p>Gets the major value of the BeaconIdentifier.</p>","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(py)minor":{"name":"minor","abstract":"<p>Gets the minor value of the BeaconIdentifier.</p>","parent_name":"BeaconIdentifier"},"Classes/BeaconIdentifier.html#/c:objc(cs)BeaconIdentifier(im)toString":{"name":"-toString","abstract":"<p>DEPRECATED: Use description instead.</p>","parent_name":"BeaconIdentifier"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)initWithCustomer:andApikey:andCallback:":{"name":"+initWithCustomer:andApikey:andCallback:","abstract":"<p>Initializes the MovinSDK, which validates the given customer and apikey. The device will be checked for compatibility with Bluetooth Low Energy and some primary components are initialized.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)reset":{"name":"+reset","abstract":"<p>Resets the state of the MovinSDK.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getBeaconScanner:":{"name":"+getBeaconScanner:","abstract":"<p>Returns the singleton instance of MovinBeaconScanner.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getMaps:":{"name":"+getMaps:","abstract":"<p>Returns a collection of available maps.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getMapWithId:andError:":{"name":"+getMapWithId:andError:","abstract":"<p>Returns a MovinMap object with the specified id. If the specified id is not available an error is set.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getStyles:":{"name":"+getStyles:","abstract":"<p>Returns a collection of available styles.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getStyleWithName:andError:":{"name":"+getStyleWithName:andError:","abstract":"<p>Returns a MovinTileStyle object with the specified name. If the specified name is not available an error","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getInternationalizationWithError:":{"name":"+getInternationalizationWithError:","abstract":"<p>Returns a shared MovinI18N object for internationalization of routing and maps.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)isInitialized":{"name":"+isInitialized","abstract":"<p>Returns whether or not the MovinSDK has already been initialized or not.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getServiceSupported:":{"name":"+getServiceSupported:","abstract":"<p>Checks if the given service is supported by both the device and apikey rights.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)clearCache":{"name":"+clearCache","abstract":"<p>Clears the cached files stored by the Movin SDK.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)setCacheProtocolForTypes:to:":{"name":"+setCacheProtocolForTypes:to:","abstract":"<p>Sets the cache protocol for the specified data types.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getCacheProtocolForType:":{"name":"+getCacheProtocolForType:","abstract":"<p>Gets the cache protocol for the specified data type.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)setAnalyticsEnabled:":{"name":"+setAnalyticsEnabled:","abstract":"<p>Sets a value indicating whether the analytics service should be enabled.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getVersion":{"name":"+getVersion","abstract":"<p>Returns the version number of the Movin SDK.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getVersionString":{"name":"+getVersionString","abstract":"<p>Returns the version string of the Movin SDK.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html#/c:objc(cs)MovinSDK(cm)getServerVersionWithCallback:":{"name":"+getServerVersionWithCallback:","abstract":"<p>Gets the version of the server.</p>","parent_name":"MovinSDK"},"Classes/MovinSDK.html":{"name":"MovinSDK","abstract":"<p>Represents the entry point of MovinSDK.</p>"},"Classes/BeaconIdentifier.html":{"name":"BeaconIdentifier","abstract":"<p>Represents the identifier of a beacon.</p>"},"Classes/FloorPosition.html":{"name":"FloorPosition","abstract":"<p>Represents a geographical position in combination with a floor number.</p>"},"Classes/MovinBeacon.html":{"name":"MovinBeacon","abstract":"<p>Represents a single beacon.</p>"},"Classes/MovinBeaconGroup.html":{"name":"MovinBeaconGroup","abstract":"<p>Represents a group of beacons.</p>"},"Classes/MovinBuilding.html":{"name":"MovinBuilding","abstract":"<p>Represents a building.</p>"},"Classes/MovinCacheProtocol.html":{"name":"MovinCacheProtocol","abstract":"<p>Represents a protocol which defines the caching behaviour for a specific data type.</p>"},"Classes/MovinEntity.html":{"name":"MovinEntity","abstract":"<p>Represents an entity of a map.</p>"},"Classes/MovinEntitySubType.html":{"name":"MovinEntitySubType","abstract":"<p>Represents a (sub-)type of an entity.</p>"},"Classes/MovinFloor.html":{"name":"MovinFloor","abstract":"<p>Represents a single floor in a MovinMap.</p>"},"Classes/MovinFontFamily.html":{"name":"MovinFontFamily","abstract":"<p>Represents a font family.</p>"},"Classes/MovinMap.html":{"name":"MovinMap","abstract":"<p>Represents a map.</p>"},"Classes/MovinMapZoomLevel.html":{"name":"MovinMapZoomLevel","abstract":"<p>Represents a single available zoom level of a map.</p>"},"Classes/MovinImagePoint.html":{"name":"MovinImagePoint","abstract":"<p>Represents a point on an image.</p>"},"Classes/MovinScaledPOIUrl.html":{"name":"MovinScaledPOIUrl","abstract":"<p>Represents an URL of a POI image for a specific screen scale.</p>"},"Classes/MovinDataObject.html":{"name":"MovinDataObject","abstract":"<p>Represents an object which can be initialized with JSON data.</p>"},"Classes/MovinFeatureObject.html":{"name":"MovinFeatureObject","abstract":"<p>Represents a data object with a geometric shape.</p>"},"Classes/MovinPositionedDataObject.html":{"name":"MovinPositionedDataObject","abstract":"<p>Represents a data object with a position and a floor.</p>"},"Classes/MovinFlooredFeatureObject.html":{"name":"MovinFlooredFeatureObject","abstract":"<p>Represents a data object with a geometric shape and a floor.</p>"},"Enums/MovinCacheableData.html":{"name":"MovinCacheableData","abstract":"<p>A list of Movin data types which can be cached.</p>"},"Enums/MovinService.html":{"name":"MovinService","abstract":"<p>A list of the Movin services.</p>"},"Core.html#/c:MovinSDKCore.h@T@DownloadDataCallback":{"name":"DownloadDataCallback","abstract":"<p>Handler for download requests. A value indicating whether the download was successful is provided together with an"},"Core.html#/c:MovinMap.h@T@BeaconCallback":{"name":"BeaconCallback","abstract":"<p>Handler for getting a beacon. The resulting beacon and an error is supplied. If an error occurs, the beacon will be"},"Core.html#/c:MovinMap.h@T@BeaconsCallback":{"name":"BeaconsCallback","abstract":"<p>Handler for getting beacons. An array of the resulting beacons and an error is supplied. If an error occurs, the"},"Core.html#/c:MovinMap.h@T@BuildingsCallback":{"name":"BuildingsCallback","abstract":"<p>Handler for getting buildings. An array of the resulting buildings and an error is supplied. If an error occurs, the"},"Core.html#/c:MovinMap.h@T@EntitiesCallback":{"name":"EntitiesCallback","abstract":"<p>Handler for getting entities. An array of the resulting entities and an error is supplied. If an error occurs, the"},"Core.html#/c:MovinMap.h@T@BeaconGroupsCallback":{"name":"BeaconGroupsCallback","abstract":"<p>Handler for getting beacon groups. An array of the resulting beacon groups and an error is supplied. If an error"},"Core.html#/c:MovinSDKCore.h@T@ServerVersionCallback":{"name":"ServerVersionCallback","abstract":"<p>Handler for server version response.</p>"},"Core.html":{"name":"Core"},"Maps.html":{"name":"Maps"},"Positioning.html":{"name":"Positioning"},"Translating.html":{"name":"Translating"},"Routing.html":{"name":"Routing"},"User Interface.html":{"name":"User Interface"},"Analytics.html":{"name":"Analytics"},"Style.html":{"name":"Style"},"Geometry.html":{"name":"Geometry"},"Google Maps.html":{"name":"Google Maps"},"Other Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other Enums.html":{"name":"Other Enums","abstract":"<p>The following enums are available globally.</p>"},"Other Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"}}